[
  {
    "current_expression": {
      "expr": "((pow 3 (4 + 1))[@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((pow)[@env0 ]) 3 (4 + 1)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((pow)[@env0 ]) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ]) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x -> fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x -> fun n -> if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ])) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env2 ]) then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env2 ]) = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 5 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((x * (pow x (n - 1)))[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ]) * ((pow x (n - 1))[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) ((n - 1)[@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) (((n)[@env2 ]) - 1))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((pow)[@env2 ]) ((x)[@env0 ]) (((n)[@env1 ]) - 1))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((pow)[@env1 ]) 3 (((n)[@env0 ]) - 1))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((pow)[@env0 ]) 3 (5 - 1))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((pow)[@env0 ]) 3 4)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ]) 3 4)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  ((fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])) 3\n     4)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  ((fun x -> fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])) 3\n     4)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  ((fun x -> fun n -> if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ])) 3\n     4)",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * ((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (if ((n = 0)[@env2 ]) then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (if ((n)[@env2 ]) = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (if 4 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (if false then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * ((x * (pow x (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * ((x * (pow x (n - 1)))[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((x)[@env0 ]) * ((pow x (n - 1))[@env1 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) ((n - 1)[@env2 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) (((n)[@env2 ]) - 1)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((pow)[@env2 ]) ((x)[@env0 ]) (((n)[@env1 ]) - 1)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((pow)[@env1 ]) 3 (((n)[@env0 ]) - 1)))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((pow)[@env0 ]) 3 (4 - 1)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((pow)[@env0 ]) 3 3))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])\n        3 3))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     ((fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ]))\n        3 3))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     ((fun x -> fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ]))\n        3 3))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     ((fun x -> fun n -> if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))\n        3 3))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * ((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (if ((n = 0)[@env2 ])\n      then 1\n      else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (if ((n)[@env2 ]) = 0\n      then 1\n      else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (if 3 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (if false then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * ((x * (pow x (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * ((x * (pow x (n - 1)))[@env0 ]))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((x)[@env0 ]) * ((pow x (n - 1))[@env1 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) ((n - 1)[@env2 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) (((n)[@env2 ]) - 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (((pow)[@env2 ]) ((x)[@env0 ]) (((n)[@env1 ]) - 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((pow)[@env1 ]) 3 (((n)[@env0 ]) - 1))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((pow)[@env0 ]) 3 (3 - 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((pow)[@env0 ]) 3 2)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n           [@env0 ]) 3 2)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        ((fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n            [@env0 ])) 3 2)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        ((fun x ->\n            fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ])) 3\n           2)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        ((fun x ->\n            fun n -> if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ])) 3\n           2)))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (3 * ((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))[@env1 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if ((n = 0)[@env2 ])\n         then 1\n         else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if ((n)[@env2 ]) = 0\n         then 1\n         else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (3 * (if 2 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (3 * (if false then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * ((x * (pow x (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * ((x * (pow x (n - 1)))[@env0 ])))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((x)[@env0 ]) * ((pow x (n - 1))[@env1 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 * (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) ((n - 1)[@env2 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) (((n)[@env2 ]) - 1)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (((pow)[@env2 ]) ((x)[@env0 ]) (((n)[@env1 ]) - 1)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((pow)[@env1 ]) 3 (((n)[@env0 ]) - 1)))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((pow)[@env0 ]) 3 (2 - 1)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((pow)[@env0 ]) 3 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n              [@env0 ]) 3 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           ((fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n               [@env0 ])) 3 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           ((fun x ->\n               fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))[@env0 ]))\n              3 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           ((fun x ->\n               fun n -> if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))\n              3 1))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 * ((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))[@env1 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if ((n = 0)[@env2 ])\n            then 1\n            else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if ((n)[@env2 ]) = 0\n            then 1\n            else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 * (if 1 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 * (if false then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * ((x * (pow x (n - 1)))[@env0 ]))))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (((x)[@env0 ]) * ((pow x (n - 1))[@env1 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (((x)[@env0 ]) * (((pow)[@env3 ]) ((x)[@env1 ]) ((n - 1)[@env2 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (((x)[@env0 ]) *\n              (((pow)[@env3 ]) ((x)[@env1 ]) (((n)[@env2 ]) - 1))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (3 * (3 * (3 * (((pow)[@env2 ]) ((x)[@env0 ]) (((n)[@env1 ]) - 1))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (3 * (((pow)[@env1 ]) 3 (((n)[@env0 ]) - 1))))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * (((pow)[@env0 ]) 3 (1 - 1))))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * (((pow)[@env0 ]) 3 0)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (((fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n                 [@env0 ]) 3 0)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((fun x -> ((fun n -> if n = 0 then 1 else x * (pow x (n - 1)))\n                  [@env0 ])) 3 0)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((fun x ->\n                  fun n -> ((if n = 0 then 1 else x * (pow x (n - 1)))\n                    [@env0 ])) 3 0)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((fun x ->\n                  fun n ->\n                    if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ])) 3 0)))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 * ((if n = 0 then 1 else ((x * (pow x (n - 1)))[@env0 ]))\n              [@env1 ])))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if ((n = 0)[@env2 ])\n               then 1\n               else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if ((n)[@env2 ]) = 0\n               then 1\n               else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if 0 = 0 then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 * (if true then 1 else ((x * (pow x (n - 1)))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "pow": {
            "corec": [ "pow" ],
            "expr": {
              "expr":
                "fun x -> fun n -> if n = 0 then 1 else x * (pow x (n - 1))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * 1))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * (3 * (3 * 3)))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * (3 * 9))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * 27)", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * 81", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "243", "envs": {} }, "step": [] }
]