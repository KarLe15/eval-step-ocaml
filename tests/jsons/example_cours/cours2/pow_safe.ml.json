[
  {
    "current_expression": {
      "expr": "((pow 3 5)[@env0 ])",
      "envs": {
        "env0": {
          "pow": {
            "corec": [],
            "expr": {
              "expr":
                "fun x ->\n  fun n ->\n    let rec loop n = if n = 0 then 1 else x * (loop (n - 1)) in\n    if n < 0\n    then raise (Invalid_argument \"pow: negative exponent\")\n    else loop n",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((pow)[@env0 ]) 3 5",
      "envs": {
        "env0": {
          "pow": {
            "corec": [],
            "expr": {
              "expr":
                "fun x ->\n  fun n ->\n    let rec loop n = if n = 0 then 1 else x * (loop (n - 1)) in\n    if n < 0\n    then raise (Invalid_argument \"pow: negative exponent\")\n    else loop n",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x ->\n   fun n ->\n     let rec loop n = if n = 0 then 1 else x * (loop (n - 1)) in\n     if n < 0\n     then raise (Invalid_argument \"pow: negative exponent\")\n     else loop n) 3 5",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((let rec loop n = if n = 0 then 1 else x * (loop (n - 1)) in\n  if n < 0 then raise (Invalid_argument \"pow: negative exponent\") else loop n)\n[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop = ((fun n -> if n = 0 then 1 else x * (loop (n - 1)))[@env1 ]) in\n((if n < 0 then raise (Invalid_argument \"pow: negative exponent\") else loop n)\n  [@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop = ((fun n -> if n = 0 then 1 else x * (loop (n - 1)))[@env2 ]) in\nif ((n < 0)[@env1 ])\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop = ((fun n -> if n = 0 then 1 else x * (loop (n - 1)))[@env2 ]) in\nif ((n)[@env1 ]) < 0\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop n = ((if n = 0 then 1 else x * (loop (n - 1)))[@env2 ]) in\nif ((n)[@env1 ]) < 0\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop n = if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ]) in\nif ((n)[@env1 ]) < 0\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop n = if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ]) in\nif 5 < 0\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((if 5 < 0\n  then raise (Invalid_argument \"pow: negative exponent\")\n  else ((loop n)[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if 5 < 0\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env1 ][@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "if false\nthen raise (Invalid_argument \"pow: negative exponent\")\nelse ((loop n)[@env1 ][@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((loop n)[@env1 ][@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop n)[@env0 ])",
      "envs": {
        "env0": {
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) ((n)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))[@env1 ]) 5",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))[@env1 ])) 5",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ])) 5",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))[@env2 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env3 ])\nthen 1\nelse ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env3 ]) = 0\nthen 1\nelse ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "if 5 = 0 then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "if false then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((x * (loop (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((x * (loop (n - 1)))[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ]) * ((loop (n - 1))[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ]) * (((loop)[@env2 ]) ((n - 1)[@env1 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ]) * (((loop)[@env2 ]) (((n)[@env1 ]) - 1))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((loop)[@env1 ]) (((n)[@env0 ]) - 1))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((loop)[@env0 ]) (5 - 1))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((loop)[@env0 ]) 4)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))[@env1 ]) 4)",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  ((fun n -> ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))[@env1 ]))\n     4)",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  ((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ])) 4)",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))[@env2 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (if ((n = 0)[@env3 ])\n   then 1\n   else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (if ((n)[@env3 ]) = 0\n   then 1\n   else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (if 4 = 0 then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (if false then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * ((x * (loop (n - 1)))[@env1 ][@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * ((x * (loop (n - 1)))[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((x)[@env0 ]) * ((loop (n - 1))[@env1 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((x)[@env0 ]) * (((loop)[@env2 ]) ((n - 1)[@env1 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (((x)[@env0 ]) * (((loop)[@env2 ]) (((n)[@env1 ]) - 1)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((loop)[@env1 ]) (((n)[@env0 ]) - 1)))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((loop)[@env0 ]) (4 - 1)))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((loop)[@env0 ]) 3))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n        [@env1 ]) 3))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     ((fun n -> ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n         [@env1 ])) 3))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     ((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n        3))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n     [@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (if ((n = 0)[@env3 ])\n      then 1\n      else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (if ((n)[@env3 ]) = 0\n      then 1\n      else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (if 3 = 0 then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (if false then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * ((x * (loop (n - 1)))[@env1 ][@env0 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * ((x * (loop (n - 1)))[@env0 ]))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (((x)[@env0 ]) * ((loop (n - 1))[@env1 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) ((n - 1)[@env1 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) (((n)[@env1 ]) - 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((loop)[@env1 ]) (((n)[@env0 ]) - 1))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((loop)[@env0 ]) (3 - 1))))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((loop)[@env0 ]) 2)))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n           [@env1 ]) 2)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        ((fun n -> ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n            [@env1 ])) 2)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        ((fun n ->\n            if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ])) 2)))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 * ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n        [@env2 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if ((n = 0)[@env3 ])\n         then 1\n         else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if ((n)[@env3 ]) = 0\n         then 1\n         else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if 2 = 0 then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (if false then 1 else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * ((x * (loop (n - 1)))[@env1 ][@env0 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * ((x * (loop (n - 1)))[@env0 ])))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (((x)[@env0 ]) * ((loop (n - 1))[@env1 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) ((n - 1)[@env1 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) (((n)[@env1 ]) - 1)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((loop)[@env1 ]) (((n)[@env0 ]) - 1)))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((loop)[@env0 ]) (2 - 1)))))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (((loop)[@env0 ]) 1))))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n              [@env1 ]) 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           ((fun n -> ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n               [@env1 ])) 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           ((fun n ->\n               if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ])) 1))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 * ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n           [@env2 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if ((n = 0)[@env3 ])\n            then 1\n            else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if ((n)[@env3 ]) = 0\n            then 1\n            else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if 1 = 0\n            then 1\n            else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (if false\n            then 1\n            else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * ((x * (loop (n - 1)))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * ((x * (loop (n - 1)))[@env0 ]))))",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (((x)[@env0 ]) * ((loop (n - 1))[@env1 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) ((n - 1)[@env1 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 * (3 * (3 * (((x)[@env0 ]) * (((loop)[@env2 ]) (((n)[@env1 ]) - 1))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 * (3 * (3 * (3 * (3 * (((loop)[@env1 ]) (((n)[@env0 ]) - 1))))))",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * (((loop)[@env0 ]) (1 - 1))))))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * (((loop)[@env0 ]) 0)))))",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ])",
              "envs": {
                "env1": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (((fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n                 [@env1 ]) 0)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((fun n ->\n                  ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env0 ]))\n                  [@env1 ])) 0)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((fun n ->\n                  if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n                 0)))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env2 ])",
              "envs": {
                "env2": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              ((if n = 0 then 1 else ((x * (loop (n - 1)))[@env1 ][@env0 ]))\n              [@env2 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if ((n = 0)[@env3 ])\n               then 1\n               else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if ((n)[@env3 ]) = 0\n               then 1\n               else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env4 ])",
              "envs": {
                "env4": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if 0 = 0\n               then 1\n               else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "3 *\n  (3 *\n     (3 *\n        (3 *\n           (3 *\n              (if true\n               then 1\n               else ((x * (loop (n - 1)))[@env2 ][@env1 ][@env0 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun n -> if n = 0 then 1 else ((x * (loop (n - 1)))[@env3 ])",
              "envs": {
                "env3": {
                  "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
                }
              }
            }
          }
        },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "3 * (3 * (3 * (3 * (3 * 1))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * (3 * (3 * 3)))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * (3 * 9))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * (3 * 27)", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "3 * 81", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "243", "envs": {} }, "step": [] }
]