[
  {
    "current_expression": {
      "expr": "((search (fun x -> (x mod 5) = 0) ex)[@env0 ])",
      "envs": {
        "env0": {
          "search": {
            "corec": [],
            "expr": {
              "expr":
                "fun p ->\n  fun bt ->\n    let rec loop bt =\n      match bt with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          if p x\n          then Some x\n          else (match loop bt1 with | None -> loop bt2 | Some x -> Some x) in\n    match loop bt with | Some x -> x | None -> raise Not_found",
              "envs": {}
            }
          },
          "ex": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((search)[@env1 ]) (fun x -> (x mod 5) = 0) ((ex)[@env0 ])",
      "envs": {
        "env0": {
          "ex": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "search": {
            "corec": [],
            "expr": {
              "expr":
                "fun p ->\n  fun bt ->\n    let rec loop bt =\n      match bt with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          if p x\n          then Some x\n          else (match loop bt1 with | None -> loop bt2 | Some x -> Some x) in\n    match loop bt with | Some x -> x | None -> raise Not_found",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun p ->\n   fun bt ->\n     let rec loop bt =\n       match bt with\n       | Empty -> None\n       | Node (x, bt1, bt2) ->\n           if p x\n           then Some x\n           else (match loop bt1 with | None -> loop bt2 | Some x -> Some x) in\n     match loop bt with | Some x -> x | None -> raise Not_found)\n  (fun x -> (x mod 5) = 0) ((ex)[@env0 ])",
      "envs": {
        "env0": {
          "ex": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun p ->\n   fun bt ->\n     let rec loop bt =\n       match bt with\n       | Empty -> None\n       | Node (x, bt1, bt2) ->\n           if p x\n           then Some x\n           else (match loop bt1 with | None -> loop bt2 | Some x -> Some x) in\n     match loop bt with | Some x -> x | None -> raise Not_found)\n  (fun x -> (x mod 5) = 0)\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((let rec loop bt =\n    match bt with\n    | Empty -> None\n    | Node (x, bt1, bt2) ->\n        if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x) in\n  match loop bt with | Some x -> x | None -> raise Not_found)\n[@env0 ])",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop =\n  ((fun bt ->\n      match bt with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          if p x\n          then Some x\n          else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ]) in\n((match loop bt with | Some x -> x | None -> raise Not_found)[@env0 ])",
      "envs": {
        "env0": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop =\n  ((fun bt ->\n      match bt with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          if p x\n          then Some x\n          else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ]) in\nmatch ((loop bt)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop =\n  ((fun bt ->\n      match bt with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          if p x\n          then Some x\n          else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ]) in\nmatch loop ((bt)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop bt =\n  ((match bt with\n    | Empty -> None\n    | Node (x, bt1, bt2) ->\n        if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ]) in\nmatch loop ((bt)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop bt =\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ]) in\nmatch loop ((bt)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop bt =\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env0 ]) in\nmatch loop\n        (Node\n           (1,\n             (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n             (Node (5, (Node (6, Empty, Empty)), Empty))))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((match loop\n          (Node\n             (1,\n               (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n               (Node (5, (Node (6, Empty, Empty)), Empty))))\n  with\n  | Some x -> x\n  | None -> raise Not_found)\n[@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((loop\n          (Node\n             (1,\n               (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n               (Node (5, (Node (6, Empty, Empty)), Empty)))))\n  [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((loop)[@env0 ])\n        (Node\n           (1,\n             (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n             (Node (5, (Node (6, Empty, Empty)), Empty))))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((fun bt ->\n          match bt with\n          | Empty -> None\n          | Node (x, bt1, bt2) ->\n              ((if p x\n                then Some x\n                else\n                  (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env0 ]))[@env1 ])\n        (Node\n           (1,\n             (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n             (Node (5, (Node (6, Empty, Empty)), Empty))))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match (fun bt ->\n         ((match bt with\n           | Empty -> None\n           | Node (x, bt1, bt2) ->\n               ((if p x\n                 then Some x\n                 else\n                   (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n               [@env0 ]))\n         [@env1 ]))\n        (Node\n           (1,\n             (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n             (Node (5, (Node (6, Empty, Empty)), Empty))))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match (fun bt ->\n         match bt with\n         | Empty -> None\n         | Node (x, bt1, bt2) ->\n             ((if p x\n               then Some x\n               else\n                 (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n             [@env1 ][@env0 ]))\n        (Node\n           (1,\n             (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n             (Node (5, (Node (6, Empty, Empty)), Empty))))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((match bt with\n        | Empty -> None\n        | Node (x, bt1, bt2) ->\n            ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n            [@env1 ][@env0 ]))\n  [@env2 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((bt)[@env2 ]) with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          ((if p x\n            then Some x\n            else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n          [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match Node\n              (1,\n                (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n                (Node (5, (Node (6, Empty, Empty)), Empty)))\n      with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          ((if p x\n            then Some x\n            else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n          [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env2 ][@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((p x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((p)[@env3 ]) ((x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (fun x -> (x mod 5) = 0) ((x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (fun x -> (x mod 5) = 0) 1\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (((x mod 5) = 0)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((x mod 5)[@env2 ]) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (((x)[@env2 ]) mod 5) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (1 mod 5) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match if 1 = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match if false\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((match loop bt1 with | None -> loop bt2 | Some x -> Some x)[@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop bt1)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env2 ]) ((bt1)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env1 ])\n              (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty))))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((fun bt ->\n                match bt with\n                | Empty -> None\n                | Node (x, bt1, bt2) ->\n                    ((if p x\n                      then Some x\n                      else\n                        (match loop bt1 with\n                         | None -> loop bt2\n                         | Some x -> Some x))\n                    [@env1 ]))[@env2 ])\n              (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty))))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               ((match bt with\n                 | Empty -> None\n                 | Node (x, bt1, bt2) ->\n                     ((if p x\n                       then Some x\n                       else\n                         (match loop bt1 with\n                          | None -> loop bt2\n                          | Some x -> Some x))\n                     [@env1 ]))\n               [@env2 ]))\n              (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty))))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               match bt with\n               | Empty -> None\n               | Node (x, bt1, bt2) ->\n                   ((if p x\n                     then Some x\n                     else\n                       (match loop bt1 with\n                        | None -> loop bt2\n                        | Some x -> Some x))\n                   [@env2 ][@env1 ]))\n              (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty))))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((match bt with\n              | Empty -> None\n              | Node (x, bt1, bt2) ->\n                  ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                  [@env2 ][@env1 ]))\n        [@env3 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((bt)[@env3 ]) with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match Node\n                    (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))\n            with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env3 ][@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((p x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((p)[@env4 ]) ((x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env4": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (fun x -> (x mod 5) = 0) ((x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (fun x -> (x mod 5) = 0) 2\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (((x mod 5) = 0)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((x mod 5)[@env3 ]) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (((x)[@env3 ]) mod 5) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (2 mod 5) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if 2 = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if false\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((match loop bt1 with | None -> loop bt2 | Some x -> Some x)\n        [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop bt1)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env3 ]) ((bt1)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env2 ]) (Node (3, Empty, Empty)) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((fun bt ->\n                      match bt with\n                      | Empty -> None\n                      | Node (x, bt1, bt2) ->\n                          ((if p x\n                            then Some x\n                            else\n                              (match loop bt1 with\n                               | None -> loop bt2\n                               | Some x -> Some x))\n                          [@env2 ]))[@env3 ]) (Node (3, Empty, Empty))\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     ((match bt with\n                       | Empty -> None\n                       | Node (x, bt1, bt2) ->\n                           ((if p x\n                             then Some x\n                             else\n                               (match loop bt1 with\n                                | None -> loop bt2\n                                | Some x -> Some x))\n                           [@env2 ]))\n                     [@env3 ])) (Node (3, Empty, Empty))\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     match bt with\n                     | Empty -> None\n                     | Node (x, bt1, bt2) ->\n                         ((if p x\n                           then Some x\n                           else\n                             (match loop bt1 with\n                              | None -> loop bt2\n                              | Some x -> Some x))\n                         [@env3 ][@env2 ])) (Node (3, Empty, Empty))\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((match bt with\n                    | Empty -> None\n                    | Node (x, bt1, bt2) ->\n                        ((if p x\n                          then Some x\n                          else\n                            (match loop bt1 with\n                             | None -> loop bt2\n                             | Some x -> Some x))\n                        [@env3 ][@env2 ]))\n              [@env4 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((bt)[@env4 ]) with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match Node (3, Empty, Empty) with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n              [@env4 ][@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n              [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n              [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if ((p x)[@env4 ])\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if ((p)[@env5 ]) ((x)[@env4 ])\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env5": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if (fun x -> (x mod 5) = 0) ((x)[@env4 ])\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if (fun x -> (x mod 5) = 0) 3\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if (((x mod 5) = 0)[@env4 ])\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if ((x mod 5)[@env4 ]) = 0\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if (((x)[@env4 ]) mod 5) = 0\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env4": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if (3 mod 5) = 0\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if 3 = 0\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match if false\n                  then ((Some x)[@env3 ])\n                  else\n                    (((match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                    [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((match loop bt1 with | None -> loop bt2 | Some x -> Some x)\n              [@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((loop bt1)[@env3 ]) with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((loop)[@env4 ]) ((bt1)[@env3 ]) with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((loop)[@env3 ]) Empty with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((fun bt ->\n                            match bt with\n                            | Empty -> None\n                            | Node (x, bt1, bt2) ->\n                                ((if p x\n                                  then Some x\n                                  else\n                                    (match loop bt1 with\n                                     | None -> loop bt2\n                                     | Some x -> Some x))\n                                [@env3 ]))[@env4 ]) Empty\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match (fun bt ->\n                           ((match bt with\n                             | Empty -> None\n                             | Node (x, bt1, bt2) ->\n                                 ((if p x\n                                   then Some x\n                                   else\n                                     (match loop bt1 with\n                                      | None -> loop bt2\n                                      | Some x -> Some x))\n                                 [@env3 ]))\n                           [@env4 ])) Empty\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match (fun bt ->\n                           match bt with\n                           | Empty -> None\n                           | Node (x, bt1, bt2) ->\n                               ((if p x\n                                 then Some x\n                                 else\n                                   (match loop bt1 with\n                                    | None -> loop bt2\n                                    | Some x -> Some x))\n                               [@env4 ][@env3 ])) Empty\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((match bt with\n                          | Empty -> None\n                          | Node (x, bt1, bt2) ->\n                              ((if p x\n                                then Some x\n                                else\n                                  (match loop bt1 with\n                                   | None -> loop bt2\n                                   | Some x -> Some x))\n                              [@env4 ][@env3 ]))\n                    [@env5 ])\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env9 ])",
              "envs": {
                "env9": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match match ((bt)[@env5 ]) with\n                        | Empty -> None\n                        | Node (x, bt1, bt2) ->\n                            ((if p x\n                              then Some x\n                              else\n                                (match loop bt1 with\n                                 | None -> loop bt2\n                                 | Some x -> Some x))\n                            [@env4 ][@env3 ])\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env9 ])",
              "envs": {
                "env9": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match match Empty with\n                        | Empty -> None\n                        | Node (x, bt1, bt2) ->\n                            ((if p x\n                              then Some x\n                              else\n                                (match loop bt1 with\n                                 | None -> loop bt2\n                                 | Some x -> Some x))\n                            [@env4 ][@env3 ])\n                  with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env4": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env8 ])",
              "envs": {
                "env8": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match None with\n                  | None -> ((loop bt2)[@env2 ])\n                  | Some x -> Some x\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop bt2)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env3 ]) ((bt2)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env2 ]) Empty with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((fun bt ->\n                      match bt with\n                      | Empty -> None\n                      | Node (x, bt1, bt2) ->\n                          ((if p x\n                            then Some x\n                            else\n                              (match loop bt1 with\n                               | None -> loop bt2\n                               | Some x -> Some x))\n                          [@env2 ]))[@env3 ]) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     ((match bt with\n                       | Empty -> None\n                       | Node (x, bt1, bt2) ->\n                           ((if p x\n                             then Some x\n                             else\n                               (match loop bt1 with\n                                | None -> loop bt2\n                                | Some x -> Some x))\n                           [@env2 ]))\n                     [@env3 ])) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     match bt with\n                     | Empty -> None\n                     | Node (x, bt1, bt2) ->\n                         ((if p x\n                           then Some x\n                           else\n                             (match loop bt1 with\n                              | None -> loop bt2\n                              | Some x -> Some x))\n                         [@env3 ][@env2 ])) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((match bt with\n                    | Empty -> None\n                    | Node (x, bt1, bt2) ->\n                        ((if p x\n                          then Some x\n                          else\n                            (match loop bt1 with\n                             | None -> loop bt2\n                             | Some x -> Some x))\n                        [@env3 ][@env2 ]))\n              [@env4 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((bt)[@env4 ]) with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match Empty with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match None with | None -> ((loop bt2)[@env1 ]) | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop bt2)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env2 ]) ((bt2)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env1 ]) (Node (4, Empty, Empty)) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((fun bt ->\n                match bt with\n                | Empty -> None\n                | Node (x, bt1, bt2) ->\n                    ((if p x\n                      then Some x\n                      else\n                        (match loop bt1 with\n                         | None -> loop bt2\n                         | Some x -> Some x))\n                    [@env1 ]))[@env2 ]) (Node (4, Empty, Empty))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               ((match bt with\n                 | Empty -> None\n                 | Node (x, bt1, bt2) ->\n                     ((if p x\n                       then Some x\n                       else\n                         (match loop bt1 with\n                          | None -> loop bt2\n                          | Some x -> Some x))\n                     [@env1 ]))\n               [@env2 ])) (Node (4, Empty, Empty))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               match bt with\n               | Empty -> None\n               | Node (x, bt1, bt2) ->\n                   ((if p x\n                     then Some x\n                     else\n                       (match loop bt1 with\n                        | None -> loop bt2\n                        | Some x -> Some x))\n                   [@env2 ][@env1 ])) (Node (4, Empty, Empty))\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((match bt with\n              | Empty -> None\n              | Node (x, bt1, bt2) ->\n                  ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                  [@env2 ][@env1 ]))\n        [@env3 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((bt)[@env3 ]) with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match Node (4, Empty, Empty) with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env3 ][@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((p x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((p)[@env4 ]) ((x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env4": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (fun x -> (x mod 5) = 0) ((x)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (fun x -> (x mod 5) = 0) 4\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (((x mod 5) = 0)[@env3 ])\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if ((x mod 5)[@env3 ]) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (((x)[@env3 ]) mod 5) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if (4 mod 5) = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if 4 = 0\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match match if false\n            then ((Some x)[@env2 ])\n            else\n              (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((match loop bt1 with | None -> loop bt2 | Some x -> Some x)\n        [@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop bt1)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env3 ]) ((bt1)[@env2 ]) with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "bt1": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((loop)[@env2 ]) Empty with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((fun bt ->\n                      match bt with\n                      | Empty -> None\n                      | Node (x, bt1, bt2) ->\n                          ((if p x\n                            then Some x\n                            else\n                              (match loop bt1 with\n                               | None -> loop bt2\n                               | Some x -> Some x))\n                          [@env2 ]))[@env3 ]) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     ((match bt with\n                       | Empty -> None\n                       | Node (x, bt1, bt2) ->\n                           ((if p x\n                             then Some x\n                             else\n                               (match loop bt1 with\n                                | None -> loop bt2\n                                | Some x -> Some x))\n                           [@env2 ]))\n                     [@env3 ])) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match (fun bt ->\n                     match bt with\n                     | Empty -> None\n                     | Node (x, bt1, bt2) ->\n                         ((if p x\n                           then Some x\n                           else\n                             (match loop bt1 with\n                              | None -> loop bt2\n                              | Some x -> Some x))\n                         [@env3 ][@env2 ])) Empty\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((match bt with\n                    | Empty -> None\n                    | Node (x, bt1, bt2) ->\n                        ((if p x\n                          then Some x\n                          else\n                            (match loop bt1 with\n                             | None -> loop bt2\n                             | Some x -> Some x))\n                        [@env3 ][@env2 ]))\n              [@env4 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match ((bt)[@env4 ]) with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env7 ])",
              "envs": {
                "env7": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match match Empty with\n                  | Empty -> None\n                  | Node (x, bt1, bt2) ->\n                      ((if p x\n                        then Some x\n                        else\n                          (match loop bt1 with\n                           | None -> loop bt2\n                           | Some x -> Some x))\n                      [@env3 ][@env2 ])\n            with\n            | None -> ((loop bt2)[@env1 ])\n            | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env3": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env6 ])",
              "envs": {
                "env6": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match None with | None -> ((loop bt2)[@env1 ]) | Some x -> Some x\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop bt2)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env2 ]) ((bt2)[@env1 ]) with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((loop)[@env1 ]) Empty with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((fun bt ->\n                match bt with\n                | Empty -> None\n                | Node (x, bt1, bt2) ->\n                    ((if p x\n                      then Some x\n                      else\n                        (match loop bt1 with\n                         | None -> loop bt2\n                         | Some x -> Some x))\n                    [@env1 ]))[@env2 ]) Empty\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               ((match bt with\n                 | Empty -> None\n                 | Node (x, bt1, bt2) ->\n                     ((if p x\n                       then Some x\n                       else\n                         (match loop bt1 with\n                          | None -> loop bt2\n                          | Some x -> Some x))\n                     [@env1 ]))\n               [@env2 ])) Empty\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match (fun bt ->\n               match bt with\n               | Empty -> None\n               | Node (x, bt1, bt2) ->\n                   ((if p x\n                     then Some x\n                     else\n                       (match loop bt1 with\n                        | None -> loop bt2\n                        | Some x -> Some x))\n                   [@env2 ][@env1 ])) Empty\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((match bt with\n              | Empty -> None\n              | Node (x, bt1, bt2) ->\n                  ((if p x\n                    then Some x\n                    else\n                      (match loop bt1 with\n                       | None -> loop bt2\n                       | Some x -> Some x))\n                  [@env2 ][@env1 ]))\n        [@env3 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match ((bt)[@env3 ]) with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env5 ])",
              "envs": {
                "env5": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "bt": { "corec": [], "expr": { "expr": "Empty", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match match Empty with\n            | Empty -> None\n            | Node (x, bt1, bt2) ->\n                ((if p x\n                  then Some x\n                  else\n                    (match loop bt1 with\n                     | None -> loop bt2\n                     | Some x -> Some x))\n                [@env2 ][@env1 ])\n      with\n      | None -> ((loop bt2)[@env0 ])\n      | Some x -> Some x\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match match None with | None -> ((loop bt2)[@env0 ]) | Some x -> Some x with\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((loop bt2)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((loop)[@env1 ]) ((bt2)[@env0 ]) with\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((loop)[@env0 ]) (Node (5, (Node (6, Empty, Empty)), Empty)) with\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((fun bt ->\n          match bt with\n          | Empty -> None\n          | Node (x, bt1, bt2) ->\n              ((if p x\n                then Some x\n                else\n                  (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n              [@env0 ]))[@env1 ]) (Node (5, (Node (6, Empty, Empty)), Empty))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match (fun bt ->\n         ((match bt with\n           | Empty -> None\n           | Node (x, bt1, bt2) ->\n               ((if p x\n                 then Some x\n                 else\n                   (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n               [@env0 ]))\n         [@env1 ])) (Node (5, (Node (6, Empty, Empty)), Empty))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match (fun bt ->\n         match bt with\n         | Empty -> None\n         | Node (x, bt1, bt2) ->\n             ((if p x\n               then Some x\n               else\n                 (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n             [@env1 ][@env0 ])) (Node (5, (Node (6, Empty, Empty)), Empty))\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((match bt with\n        | Empty -> None\n        | Node (x, bt1, bt2) ->\n            ((if p x\n              then Some x\n              else\n                (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n            [@env1 ][@env0 ]))\n  [@env2 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match match ((bt)[@env2 ]) with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          ((if p x\n            then Some x\n            else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n          [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match match Node (5, (Node (6, Empty, Empty)), Empty) with\n      | Empty -> None\n      | Node (x, bt1, bt2) ->\n          ((if p x\n            then Some x\n            else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n          [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env2 ][@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env1 ][@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n  [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env1 ])",
              "envs": {
                "env1": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((p x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((p)[@env3 ]) ((x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env4 ])",
              "envs": {
                "env4": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": {
          "p": {
            "corec": [],
            "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (fun x -> (x mod 5) = 0) ((x)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (fun x -> (x mod 5) = 0) 5\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (((x mod 5) = 0)[@env2 ])\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if ((x mod 5)[@env2 ]) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (((x)[@env2 ]) mod 5) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env3 ])",
              "envs": {
                "env3": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match if (5 mod 5) = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match if 0 = 0\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "match if true\n      then ((Some x)[@env1 ])\n      else (((match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n        [@env0 ])\nwith\n| Some x -> x\n| None -> raise Not_found",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun bt ->\n  match bt with\n  | Empty -> None\n  | Node (x, bt1, bt2) ->\n      ((if p x\n        then Some x\n        else (match loop bt1 with | None -> loop bt2 | Some x -> Some x))\n      [@env2 ])",
              "envs": {
                "env2": {
                  "p": {
                    "corec": [],
                    "expr": { "expr": "fun x -> (x mod 5) = 0", "envs": {} }
                  }
                }
              }
            }
          },
          "bt2": { "corec": [], "expr": { "expr": "Empty", "envs": {} } },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (6, Empty, Empty)", "envs": {} }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((Some x)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((Some x)[@env0 ]) with | Some x -> x | None -> raise Not_found",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "match Some 5 with | Some x -> x | None -> raise Not_found",
      "envs": {}
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  { "current_expression": { "expr": "5", "envs": {} }, "step": [] }
]