[
  {
    "current_expression": {
      "expr": "((btree_mem 2 ex)[@env0 ])",
      "envs": {
        "env0": {
          "ex": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((btree_mem)[@env1 ]) 2 ((ex)[@env0 ])",
      "envs": {
        "env0": {
          "ex": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "((btree_mem)[@env0 ]) 2\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun x ->\n    fun bt ->\n      match bt with\n      | Empty -> false\n      | Node (y, bt1, bt2) ->\n          (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]) 2\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x ->\n   ((fun bt ->\n       match bt with\n       | Empty -> false\n       | Node (y, bt1, bt2) ->\n           (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n   [@env0 ])) 2\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x ->\n   fun bt ->\n     ((match bt with\n       | Empty -> false\n       | Node (y, bt1, bt2) ->\n           (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n     [@env0 ])) 2\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun x ->\n   fun bt ->\n     match bt with\n     | Empty -> false\n     | Node (y, bt1, bt2) ->\n         (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ])) 2\n  (Node\n     (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n       (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match bt with\n  | Empty -> false\n  | Node (y, bt1, bt2) ->\n      (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((bt)[@env2 ]) with\n| Empty -> false\n| Node (y, bt1, bt2) ->\n    (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node\n  (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n    (Node (5, (Node (6, Empty, Empty)), Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match Node\n        (1, (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))),\n          (Node (5, (Node (6, Empty, Empty)), Empty)))\nwith\n| Empty -> false\n| Node (y, bt1, bt2) ->\n    (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "y": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "y": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ])",
      "envs": {
        "env0": {
          "y": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((x = y)[@env0 ]) || (((btree_mem x bt1) || (btree_mem x bt2))[@env1 ])",
      "envs": {
        "env0": {
          "y": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x)[@env0 ]) = ((y)[@env1 ])) || (((btree_mem x bt1) || (btree_mem x bt2))\n  [@env2 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x)[@env0 ]) = ((y)[@env1 ])) ||\n  (((btree_mem x bt1)[@env2 ]) || ((btree_mem x bt2)[@env3 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x)[@env0 ]) = ((y)[@env1 ])) ||\n  ((((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt1)[@env3 ])) ||\n     ((btree_mem x bt2)[@env5 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env5": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x)[@env0 ]) = ((y)[@env1 ])) ||\n  ((((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt1)[@env3 ])) ||\n     (((btree_mem)[@env7 ]) ((x)[@env5 ]) ((bt2)[@env6 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env5": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env6": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env7": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = ((y)[@env0 ])) ||\n  ((((btree_mem)[@env3 ]) ((x)[@env1 ]) ((bt1)[@env2 ])) ||\n     (((btree_mem)[@env6 ]) ((x)[@env4 ]) ((bt2)[@env5 ])))",
      "envs": {
        "env0": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env4": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env5": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env6": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = 1) ||\n  ((((btree_mem)[@env2 ]) ((x)[@env0 ]) ((bt1)[@env1 ])) ||\n     (((btree_mem)[@env5 ]) ((x)[@env3 ]) ((bt2)[@env4 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env4": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env5": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = 1) ||\n  ((((btree_mem)[@env1 ]) 2 ((bt1)[@env0 ])) ||\n     (((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt2)[@env3 ])))",
      "envs": {
        "env0": {
          "bt1": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = 1) ||\n  ((((btree_mem)[@env0 ]) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env3 ]) ((x)[@env1 ]) ((bt2)[@env2 ])))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = 1) ||\n  ((((btree_mem)[@env0 ]) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env2 ]) 2 ((bt2)[@env1 ])))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "bt2": {
            "corec": [],
            "expr": {
              "expr": "Node (5, (Node (6, Empty, Empty)), Empty)",
              "envs": {}
            }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(2 = 1) ||\n  ((((btree_mem)[@env0 ]) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((btree_mem)[@env0 ]) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((fun x ->\n        fun bt ->\n          match bt with\n          | Empty -> false\n          | Node (y, bt1, bt2) ->\n              (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((fun x ->\n       ((fun bt ->\n           match bt with\n           | Empty -> false\n           | Node (y, bt1, bt2) ->\n               (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n       [@env0 ])) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((fun x ->\n       fun bt ->\n         ((match bt with\n           | Empty -> false\n           | Node (y, bt1, bt2) ->\n               (x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n         [@env0 ])) 2\n      (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((fun x ->\n       fun bt ->\n         match bt with\n         | Empty -> false\n         | Node (y, bt1, bt2) ->\n             (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]))\n      2 (Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((match bt with\n     | Empty -> false\n     | Node (y, bt1, bt2) ->\n         (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]))\n     [@env1 ]) ||\n     (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((match ((bt)[@env2 ]) with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n        [@env1 ][@env0 ]))\n     || (((btree_mem)[@env3 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt": {
            "corec": [],
            "expr": {
              "expr":
                "Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty)))",
              "envs": {}
            }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((match Node (2, (Node (3, Empty, Empty)), (Node (4, Empty, Empty))) with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n        [@env1 ][@env0 ]))\n     || (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))\n     [@env2 ][@env1 ][@env0 ]) ||\n     (((btree_mem)[@env3 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "y": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env1 ][@env0 ]) ||\n     (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "y": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((x = y) || ((btree_mem x bt1) || (btree_mem x bt2)))[@env0 ]) ||\n     (((btree_mem)[@env1 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "y": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((((x = y)[@env0 ]) || (((btree_mem x bt1) || (btree_mem x bt2))[@env1 ]))\n     || (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "y": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((((x)[@env0 ]) = ((y)[@env1 ])) ||\n      (((btree_mem x bt1) || (btree_mem x bt2))[@env2 ]))\n     || (((btree_mem)[@env3 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((((x)[@env0 ]) = ((y)[@env1 ])) ||\n      (((btree_mem x bt1)[@env2 ]) || ((btree_mem x bt2)[@env3 ])))\n     || (((btree_mem)[@env4 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((((x)[@env0 ]) = ((y)[@env1 ])) ||\n      ((((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt1)[@env3 ])) ||\n         ((btree_mem x bt2)[@env5 ])))\n     || (((btree_mem)[@env6 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env5": {
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          },
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env6": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((((x)[@env0 ]) = ((y)[@env1 ])) ||\n      ((((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt1)[@env3 ])) ||\n         (((btree_mem)[@env7 ]) ((x)[@env5 ]) ((bt2)[@env6 ]))))\n     || (((btree_mem)[@env8 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "y": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env5": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env6": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env7": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env8": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = ((y)[@env0 ])) ||\n      ((((btree_mem)[@env3 ]) ((x)[@env1 ]) ((bt1)[@env2 ])) ||\n         (((btree_mem)[@env6 ]) ((x)[@env4 ]) ((bt2)[@env5 ]))))\n     || (((btree_mem)[@env7 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "y": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env4": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env5": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env6": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env7": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = 2) ||\n      ((((btree_mem)[@env2 ]) ((x)[@env0 ]) ((bt1)[@env1 ])) ||\n         (((btree_mem)[@env5 ]) ((x)[@env3 ]) ((bt2)[@env4 ]))))\n     || (((btree_mem)[@env6 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env3": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env4": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env5": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env6": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = 2) ||\n      ((((btree_mem)[@env1 ]) 2 ((bt1)[@env0 ])) ||\n         (((btree_mem)[@env4 ]) ((x)[@env2 ]) ((bt2)[@env3 ]))))\n     || (((btree_mem)[@env5 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "bt1": {
            "corec": [],
            "expr": { "expr": "Node (3, Empty, Empty)", "envs": {} }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env5": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = 2) ||\n      ((((btree_mem)[@env0 ]) 2 (Node (3, Empty, Empty))) ||\n         (((btree_mem)[@env3 ]) ((x)[@env1 ]) ((bt2)[@env2 ]))))\n     || (((btree_mem)[@env4 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env4": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = 2) ||\n      ((((btree_mem)[@env0 ]) 2 (Node (3, Empty, Empty))) ||\n         (((btree_mem)[@env2 ]) 2 ((bt2)[@env1 ]))))\n     || (((btree_mem)[@env3 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "bt2": {
            "corec": [],
            "expr": { "expr": "Node (4, Empty, Empty)", "envs": {} }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env3": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (((2 = 2) ||\n      ((((btree_mem)[@env0 ]) 2 (Node (3, Empty, Empty))) ||\n         (((btree_mem)[@env1 ]) 2 (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  ((true ||\n      ((((btree_mem)[@env0 ]) 2 (Node (3, Empty, Empty))) ||\n         (((btree_mem)[@env1 ]) 2 (Node (4, Empty, Empty)))))\n     || (((btree_mem)[@env2 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env1": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        },
        "env2": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "false ||\n  (true ||\n     (((btree_mem)[@env0 ]) 2 (Node (5, (Node (6, Empty, Empty)), Empty))))",
      "envs": {
        "env0": {
          "btree_mem": {
            "corec": [ "btree_mem" ],
            "expr": {
              "expr":
                "fun x ->\n  fun bt ->\n    match bt with\n    | Empty -> false\n    | Node (y, bt1, bt2) ->\n        (x = y) || ((btree_mem x bt1) || (btree_mem x bt2))",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "false || true", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "true", "envs": {} }, "step": [] }
]