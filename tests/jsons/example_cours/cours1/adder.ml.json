[
  {
    "current_expression": {
      "expr":
        "((add4bits (false, true, false, true) (true, true, false, false))[@env0 ])",
      "envs": {
        "env0": {
          "add4bits": {
            "corec": [],
            "expr": {
              "expr":
                "fun q1 ->\n  ((fun q2 ->\n      let (a1, a2, a3, a4) = q1 in\n      let (b1, b2, b3, b4) = q2 in\n      let (s1, c1) = adder a1 b1 false in\n      let (s2, c2) = adder a2 b2 c1 in\n      let (s3, c3) = adder a3 b3 c2 in\n      let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env2 ])",
                      "envs": {
                        "env2": {
                          "half_adder": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
                              "envs": {
                                "env3": {
                                  "xor": {
                                    "corec": [],
                                    "expr": {
                                      "expr":
                                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                                      "envs": {}
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((add4bits)[@env0 ]) (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "add4bits": {
            "corec": [],
            "expr": {
              "expr":
                "fun q1 ->\n  ((fun q2 ->\n      let (a1, a2, a3, a4) = q1 in\n      let (b1, b2, b3, b4) = q2 in\n      let (s1, c1) = adder a1 b1 false in\n      let (s2, c2) = adder a2 b2 c1 in\n      let (s3, c3) = adder a3 b3 c2 in\n      let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env2 ])",
                      "envs": {
                        "env2": {
                          "half_adder": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
                              "envs": {
                                "env3": {
                                  "xor": {
                                    "corec": [],
                                    "expr": {
                                      "expr":
                                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                                      "envs": {}
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   ((fun q2 ->\n       let (a1, a2, a3, a4) = q1 in\n       let (b1, b2, b3, b4) = q2 in\n       let (s1, c1) = adder a1 b1 false in\n       let (s2, c2) = adder a2 b2 c1 in\n       let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))\n   [@env0 ])) (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
                      "envs": {
                        "env2": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     ((let (a1, a2, a3, a4) = q1 in\n       let (b1, b2, b3, b4) = q2 in\n       let (s1, c1) = adder a1 b1 false in\n       let (s2, c2) = adder a2 b2 c1 in\n       let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))\n     [@env0 ])) (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
                      "envs": {
                        "env2": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     ((let (b1, b2, b3, b4) = q2 in\n       let (s1, c1) = adder a1 b1 false in\n       let (s2, c2) = adder a2 b2 c1 in\n       let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))[@env0 ]))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
                      "envs": {
                        "env2": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     ((let (s1, c1) = adder a1 b1 false in\n       let (s2, c2) = adder a2 b2 c1 in\n       let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))[@env0 ]))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env1 ])",
              "envs": {
                "env1": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
                      "envs": {
                        "env2": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env1 ]) in\n     ((let (s2, c2) = adder a2 b2 c1 in\n       let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))[@env0 ]))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env2 ])",
              "envs": {
                "env2": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
                      "envs": {
                        "env3": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env2 ]) in\n     let (s2, c2) = ((adder a2 b2 c1)[@env1 ]) in\n     ((let (s3, c3) = adder a3 b3 c2 in\n       let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))[@env0 ]))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env3 ])",
              "envs": {
                "env3": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
                      "envs": {
                        "env4": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env5 ])",
              "envs": {
                "env5": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
                      "envs": {
                        "env6": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env7 ])",
              "envs": {
                "env7": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
                      "envs": {
                        "env8": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env3 ]) in\n     let (s2, c2) = ((adder a2 b2 c1)[@env2 ]) in\n     let (s3, c3) = ((adder a3 b3 c2)[@env1 ]) in\n     ((let (s4, c4) = adder a4 b4 c3 in ((s1, s2, s3, s4), c4))[@env0 ]))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env3 ]) in\n     let (s2, c2) = ((adder a2 b2 c1)[@env2 ]) in\n     let (s3, c3) = ((adder a3 b3 c2)[@env1 ]) in\n     let (s4, c4) = ((adder a4 b4 c3)[@env0 ]) in ((s1, s2, s3, s4), c4))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env3 ]) in\n     let (s2, c2) = ((adder a2 b2 c1)[@env2 ]) in\n     let (s3, c3) = ((adder a3 b3 c2)[@env1 ]) in\n     let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env3 ]) in\n     let (s2, c2) = ((adder a2 b2 c1)[@env2 ]) in\n     let (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\n     let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder a1 b1 false)[@env3 ]) in\n     let (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\n     let (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\n     let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun q1 ->\n   fun q2 ->\n     let (a1, a2, a3, a4) = q1 in\n     let (b1, b2, b3, b4) = q2 in\n     let (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\n     let (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\n     let (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\n     let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  (false, true, false, true) (true, true, false, false)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env4 ])",
              "envs": {
                "env4": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
                      "envs": {
                        "env5": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (a1, a2, a3, a4) = q1 in\n  let (b1, b2, b3, b4) = q2 in\n  let (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\n  let (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\n  let (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\n  let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n[@env4 ])",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env5 ])",
              "envs": {
                "env5": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
                      "envs": {
                        "env6": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env7 ])",
              "envs": {
                "env7": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
                      "envs": {
                        "env8": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          },
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env5 ]) in\n((let (b1, b2, b3, b4) = q2 in\n  let (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\n  let (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\n  let (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\n  let (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4))\n  [@env4 ])",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env5": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env5 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env4 ]) in\nlet (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\nlet (s4, c4) = ((adder)[@env0 ]) a4 b4 c3 in ((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env6 ])",
              "envs": {
                "env6": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
                      "envs": {
                        "env7": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env8 ])",
              "envs": {
                "env8": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
                      "envs": {
                        "env9": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env5": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env5 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env4 ]) in\nlet (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n     [@env0 ])) a4 b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env7 ])",
              "envs": {
                "env7": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
                      "envs": {
                        "env8": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env5": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env5 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env4 ]) in\nlet (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n       [@env0 ])) a4 b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env7 ])",
              "envs": {
                "env7": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
                      "envs": {
                        "env8": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env5": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env5 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env4 ]) in\nlet (s1, c1) = ((adder)[@env3 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env2 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env1 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n         [@env0 ])) a4 b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env7 ])",
              "envs": {
                "env7": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
                      "envs": {
                        "env8": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env5": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env2 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env1 ]) in\n         ((let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))[@env0 ])) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env2 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env1 ]) in\n         let (s2, c2) = ((half_adder s1 c0)[@env0 ]) in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env2 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env1 ]) in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) = ((adder)[@env2 ]) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env9 ])",
              "envs": {
                "env9": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
                      "envs": {
                        "env10": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env11 ])",
              "envs": {
                "env11": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
                      "envs": {
                        "env12": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n     [@env2 ])) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n       [@env2 ])) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env6 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env5 ]) in\nlet (s1, c1) = ((adder)[@env4 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env3 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n         [@env2 ])) a3 b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env10 ])",
              "envs": {
                "env10": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
                      "envs": {
                        "env11": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env6": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env4 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env3 ]) in\n         ((let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))[@env2 ])) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env14 ])",
              "envs": {
                "env14": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
                      "envs": {
                        "env15": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env4 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env3 ]) in\n         let (s2, c2) = ((half_adder s1 c0)[@env2 ]) in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env14 ])",
              "envs": {
                "env14": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
                      "envs": {
                        "env15": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env4 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env3 ]) in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env14 ])",
              "envs": {
                "env14": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
                      "envs": {
                        "env15": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) = ((adder)[@env4 ]) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env12 ])",
              "envs": {
                "env12": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
                      "envs": {
                        "env13": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env14 ])",
              "envs": {
                "env14": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
                      "envs": {
                        "env15": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n     [@env4 ])) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n       [@env4 ])) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env7 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env6 ]) in\nlet (s1, c1) = ((adder)[@env5 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n         [@env4 ])) a2 b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env13 ])",
              "envs": {
                "env13": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
                      "envs": {
                        "env14": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env7": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) = ((adder)[@env6 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env5 ]) in\n         ((let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))[@env4 ])) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env15 ])",
              "envs": {
                "env15": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
                      "envs": {
                        "env16": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) = ((adder)[@env6 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env5 ]) in\n         let (s2, c2) = ((half_adder s1 c0)[@env4 ]) in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env15 ])",
              "envs": {
                "env15": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
                      "envs": {
                        "env16": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) = ((adder)[@env6 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env5 ]) in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env15 ])",
              "envs": {
                "env15": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
                      "envs": {
                        "env16": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) = ((adder)[@env6 ]) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  ((fun b2 ->\n      fun c0 ->\n        let (s1, c1) = half_adder b1 b2 in\n        let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n  [@env15 ])",
              "envs": {
                "env15": {
                  "half_adder": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
                      "envs": {
                        "env16": {
                          "xor": {
                            "corec": [],
                            "expr": {
                              "expr":
                                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                              "envs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n     [@env6 ])) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n       [@env6 ])) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env7 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = half_adder b1 b2 in\n           let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))\n         [@env6 ])) a1 b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env9 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env8 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env7 ]) in\n         ((let (s2, c2) = half_adder s1 c0 in (s2, (c1 || c2)))[@env6 ])) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env9": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env9 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env8 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env7 ]) in\n         let (s2, c2) = ((half_adder s1 c0)[@env6 ]) in (s2, (c1 || c2))) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env9": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env9 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env8 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder b1 b2)[@env7 ]) in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2))) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env9": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env9 ]) in\nlet (b1, b2, b3, b4) = ((q2)[@env8 ]) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2))) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "q2": {
            "corec": [],
            "expr": { "expr": "(true, true, false, false)", "envs": {} }
          }
        },
        "env9": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = ((q1)[@env8 ]) in\nlet (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2))) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "q1": {
            "corec": [],
            "expr": { "expr": "(false, true, false, true)", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a1, a2, a3, a4) = (false, true, false, true) in\nlet (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2))) a1\n    b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2))) a2\n    b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2))) a3\n    b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2))) a4\n    b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (b1, b2, b3, b4) = (true, true, false, false) in\n  let (s1, c1) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false in\n  let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3 in\n  ((s1, s2, s3, s4), c4))\n[@env8 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\n((let (s1, c1) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false in\n  let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env8 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env9 ]) in\n((let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env6 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env9 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env8 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env10 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1)\n  [@env7 ]) in\n((let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env4 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2)\n  [@env5 ]) in\n((let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env2 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      a4 b4 c3)\n  [@env2 ]) in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      a3 b3 c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a4)[@env0 ]) b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      a2 b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a3)[@env3 ]) b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a4)[@env0 ]) b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      a1 b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a2)[@env6 ]) b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a3)[@env3 ]) b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a4)[@env0 ]) b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a1)[@env9 ]) b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a2)[@env6 ]) b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a3)[@env3 ]) b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a4)[@env0 ]) b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "a4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a1)[@env8 ]) b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a2)[@env5 ]) b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a3)[@env2 ]) b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "a3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env9 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env8 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a1)[@env7 ]) b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a2)[@env4 ]) b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "a2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    ((a1)[@env6 ]) b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "a1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (b1, b2, b3, b4) = (true, true, false, false) in\nlet (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    false b1 false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true b2 c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false b3 c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true b4 c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (s1, c1) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false in\n  let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true b4 c3 in\n  ((s1, s2, s3, s4), c4))\n[@env8 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env9 ]) in\n((let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env6 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env9 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env8 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env10 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env7 ]) in\n((let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env4 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2)\n  [@env5 ]) in\n((let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true b4 c3 in\n  ((s1, s2, s3, s4), c4))[@env2 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true b4 c3)\n  [@env2 ]) in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env3 ]) true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env3 ])) true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false b3 c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env6 ]) false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env6 ])) false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true b2 c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env9 ]) true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env12 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env9 ])) true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n      false b1 false)\n  [@env11 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env12 ]) false ((b1)[@env9 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env12 ])) false ((b1)[@env9 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env20 ])",
              "envs": {
                "env20": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env12": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env11 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env10 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b1)[@env9 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env6 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env3 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b4)[@env0 ]) c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "b4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env11": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env19 ])",
              "envs": {
                "env19": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env10 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env9 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b1)[@env8 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env5 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b3)[@env2 ]) c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env9 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env8 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b1)[@env7 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n    true ((b2)[@env4 ]) c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n    false ((b1)[@env6 ]) false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    false true false in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  ((let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n    let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n  [@env8 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((((half_adder)[@env8 ]) b1 b2)[@env9 ]) in\n  ((let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))[@env7 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((((half_adder)[@env8 ]) b1 b2)[@env9 ]) in\n  let (s2, c2) = ((((half_adder)[@env6 ]) s1 c0)[@env7 ]) in (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((((half_adder)[@env8 ]) b1 b2)[@env9 ]) in\n  let (s2, c2) = ((half_adder)[@env7 ]) s1 ((c0)[@env6 ]) in (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env10 ]) ((b1)[@env8 ]) ((b2)[@env9 ]) in\n  let (s2, c2) = ((half_adder)[@env7 ]) s1 ((c0)[@env6 ]) in (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env18 ])",
              "envs": {
                "env18": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env10 ]) ((b1)[@env8 ]) ((b2)[@env9 ]) in\n  let (s2, c2) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])) s1 ((c0)\n      [@env6 ]) in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env10 ]) ((b1)[@env8 ]) ((b2)[@env9 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env7 ])) s1 ((c0)\n      [@env6 ]) in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env10 ]) ((b1)[@env8 ]) ((b2)[@env9 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env7 ]), (b1 && b2))) s1 ((c0)\n      [@env6 ]) in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env10 ]) ((b1)[@env8 ]) ((b2)[@env9 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) s1 ((c0)\n      [@env6 ]) in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((half_adder)[@env9 ]) ((b1)[@env7 ]) ((b2)[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])) ((b1)\n      [@env7 ]) ((b2)[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env9 ])) ((b1)\n      [@env7 ]) ((b2)[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env9 ]), (b1 && b2))) ((b1)[@env7 ])\n      ((b2)[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env9 ]) b1 b2), (b1 && b2))) ((b1)\n      [@env7 ]) ((b2)[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env8 ]) b1 b2), (b1 && b2))) false ((b2)\n      [@env7 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) false true in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = ((((((xor)[@env7 ]) b1 b2), (b1 && b2)))[@env8 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = (((((xor)[@env7 ]) b1 b2)[@env8 ]), ((b1 && b2)[@env9 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((((xor)[@env9 ]) ((b1)[@env7 ]) ((b2)[@env8 ])), ((b1 && b2)[@env10 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env10": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((((xor)[@env9 ]) ((b1)[@env7 ]) ((b2)[@env8 ])),\n      (((b1)[@env10 ]) && ((b2)[@env11 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env17 ])",
              "envs": {
                "env17": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env10": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env11": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env7 ]) ((b2)[@env8 ])),\n      (((b1)[@env9 ]) && ((b2)[@env10 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env10": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false ((b2)[@env7 ])),\n      (((b1)[@env8 ]) && ((b2)[@env9 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true),\n      (((b1)[@env7 ]) && ((b2)[@env8 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true), (false && ((b2)[@env7 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env7 ]), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((match (((b1, b2))[@env7 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((match (((b1)[@env7 ]), ((b2)[@env8 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((match (false, ((b2)[@env7 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) =\n    ((match (false, true) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = (true, (false && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s1, c1) = (true, false) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  ((let (s2, c2) =\n      (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) s1 false in\n    (s2, (c1 || c2)))\n  [@env7 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env8 ]) in\n  (((s2, (c1 || c2)))[@env6 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env8 ]) in\n  (s2, ((c1 || c2)[@env6 ])) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env8 ]) in\n  (s2, (((c1)[@env6 ]) || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env8 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env7 ]) false in\n  (s2, (((c1)[@env6 ]) || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env6 ]) false in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) true false in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) = ((((((xor)[@env6 ]) b1 b2), (b1 && b2)))[@env7 ]) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) = (((((xor)[@env6 ]) b1 b2)[@env7 ]), ((b1 && b2)[@env8 ])) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((((xor)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ])), ((b1 && b2)[@env9 ])) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((((xor)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ])),\n      (((b1)[@env9 ]) && ((b2)[@env10 ]))) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env16 ])",
              "envs": {
                "env16": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env9": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env10": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env6 ]) ((b2)[@env7 ])),\n      (((b1)[@env8 ]) && ((b2)[@env9 ]))) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true ((b2)[@env6 ])),\n      (((b1)[@env7 ]) && ((b2)[@env8 ]))) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false),\n      (((b1)[@env6 ]) && ((b2)[@env7 ]))) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && ((b2)[@env6 ]))) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env6 ]), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((match (((b1, b2))[@env6 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((match (((b1)[@env6 ]), ((b2)[@env7 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((match (true, ((b2)[@env6 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) =\n  let (s2, c2) =\n    ((match (true, false) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = let (s2, c2) = (true, (true && false)) in (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = let (s2, c2) = (true, false) in (s2, (false || c2)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (((s2, (false || c2)))[@env6 ]) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (((s2)[@env6 ]), ((false || c2)[@env7 ])) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (((s2)[@env6 ]), (false || ((c2)[@env7 ]))) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (true, (false || ((c2)[@env6 ]))) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (true, (false || false)) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s1, c1) = (true, false) in\nlet (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true c1 in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((s1, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (s2, c2) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1 in\n  let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((s1, s2, s3, s4), c4))\n[@env6 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env7 ]) in\n((let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((s1, s2, s3, s4), c4))[@env4 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env5 ]) in\n((let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((s1, s2, s3, s4), c4))[@env2 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((s1, s2, s3, s4), c4))[@env0 ])",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((s1, s2, s3, s4))[@env0 ]), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env3 ]) true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env3 ])) true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n       [@env3 ])) true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env8 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env7 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env9 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n         [@env3 ])) true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env15 ])",
              "envs": {
                "env15": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env9": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env5 ]) false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env5 ])) false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n       [@env5 ])) false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env8 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n         [@env5 ])) false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n      true true c1)\n  [@env7 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env8 ]) true true ((c1)[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env8 ])) true true ((c1)[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n       [@env8 ])) true true ((c1)[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n         [@env8 ])) true true ((c1)[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env8": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env7 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env6 ]) s1 c0 in (s2, (c1 || c2)))\n    true true ((c1)[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((((s1)[@env0 ]), s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env5 ]) s1 c0 in (s2, (c1 || c2)))\n    true true ((c1)[@env4 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    true true false in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  ((let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n    let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n  [@env6 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((((half_adder)[@env6 ]) b1 b2)[@env7 ]) in\n  ((let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))[@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((((half_adder)[@env6 ]) b1 b2)[@env7 ]) in\n  let (s2, c2) = ((((half_adder)[@env4 ]) s1 c0)[@env5 ]) in (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((((half_adder)[@env6 ]) b1 b2)[@env7 ]) in\n  let (s2, c2) = ((half_adder)[@env5 ]) s1 ((c0)[@env4 ]) in (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ]) in\n  let (s2, c2) = ((half_adder)[@env5 ]) s1 ((c0)[@env4 ]) in (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env14 ])",
              "envs": {
                "env14": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ]) in\n  let (s2, c2) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])) s1 ((c0)\n      [@env4 ]) in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env5 ])) s1 ((c0)\n      [@env4 ]) in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env5 ]), (b1 && b2))) s1 ((c0)\n      [@env4 ]) in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env8 ]) ((b1)[@env6 ]) ((b2)[@env7 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) s1 ((c0)\n      [@env4 ]) in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((half_adder)[@env7 ]) ((b1)[@env5 ]) ((b2)[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])) ((b1)\n      [@env5 ]) ((b2)[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env7 ])) ((b1)\n      [@env5 ]) ((b2)[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env7 ]), (b1 && b2))) ((b1)[@env5 ])\n      ((b2)[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env7 ]) b1 b2), (b1 && b2))) ((b1)\n      [@env5 ]) ((b2)[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) true ((b2)\n      [@env5 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) true true in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = ((((((xor)[@env5 ]) b1 b2), (b1 && b2)))[@env6 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = (((((xor)[@env5 ]) b1 b2)[@env6 ]), ((b1 && b2)[@env7 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((((xor)[@env7 ]) ((b1)[@env5 ]) ((b2)[@env6 ])), ((b1 && b2)[@env8 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((((xor)[@env7 ]) ((b1)[@env5 ]) ((b2)[@env6 ])),\n      (((b1)[@env8 ]) && ((b2)[@env9 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env13 ])",
              "envs": {
                "env13": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env8": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env9": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env5 ]) ((b2)[@env6 ])),\n      (((b1)[@env7 ]) && ((b2)[@env8 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true ((b2)[@env5 ])),\n      (((b1)[@env6 ]) && ((b2)[@env7 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true true),\n      (((b1)[@env5 ]) && ((b2)[@env6 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true true), (true && ((b2)[@env5 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true true), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env5 ]), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((match (((b1, b2))[@env5 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((match (((b1)[@env5 ]), ((b2)[@env6 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((match (true, ((b2)[@env5 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) =\n    ((match (true, true) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = (false, (true && true)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s1, c1) = (false, true) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  ((let (s2, c2) =\n      (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) s1 false in\n    (s2, (c1 || c2)))\n  [@env5 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env6 ]) in\n  (((s2, (c1 || c2)))[@env4 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env6 ]) in\n  (s2, ((c1 || c2)[@env4 ])) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env6 ]) in\n  (s2, (((c1)[@env4 ]) || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env6 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env5 ]) false in\n  (s2, (((c1)[@env4 ]) || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env4 ]) false in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) false false in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) = ((((((xor)[@env4 ]) b1 b2), (b1 && b2)))[@env5 ]) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) = (((((xor)[@env4 ]) b1 b2)[@env5 ]), ((b1 && b2)[@env6 ])) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((((xor)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ])), ((b1 && b2)[@env7 ])) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((((xor)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ])),\n      (((b1)[@env7 ]) && ((b2)[@env8 ]))) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env12 ])",
              "envs": {
                "env12": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env7": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env8": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env4 ]) ((b2)[@env5 ])),\n      (((b1)[@env6 ]) && ((b2)[@env7 ]))) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env11 ])",
              "envs": {
                "env11": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false ((b2)[@env4 ])),\n      (((b1)[@env5 ]) && ((b2)[@env6 ]))) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false),\n      (((b1)[@env4 ]) && ((b2)[@env5 ]))) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false),\n      (false && ((b2)[@env4 ]))) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env4 ]), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((match (((b1, b2))[@env4 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((match (((b1)[@env4 ]), ((b2)[@env5 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((match (false, ((b2)[@env4 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) =\n  let (s2, c2) =\n    ((match (false, false) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = let (s2, c2) = (false, (false && false)) in (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = let (s2, c2) = (false, false) in (s2, (true || c2)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (((s2, (true || c2)))[@env4 ]) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (((s2)[@env4 ]), ((true || c2)[@env5 ])) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (((s2)[@env4 ]), (true || ((c2)[@env5 ]))) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (false, (true || ((c2)[@env4 ]))) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (false, (true || false)) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s2, c2) = (false, true) in\nlet (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false c2 in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, s2, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (s3, c3) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2 in\n  let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((true, s2, s3, s4), c4))\n[@env4 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env5 ]) in\n((let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((true, s2, s3, s4), c4))[@env2 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((true, s2, s3, s4), c4))[@env0 ])",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((true, s2, s3, s4))[@env0 ]), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env3 ]) true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env3 ])) true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n       [@env3 ])) true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n         [@env3 ])) true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env6 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         ((let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n           [@env2 ])) true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n      false false c2)\n  [@env5 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  ((fun b1 ->\n      fun b2 ->\n        fun c0 ->\n          let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n          let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    [@env6 ]) false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     ((fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n     [@env6 ])) false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       ((fun c0 ->\n           let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n       [@env6 ])) false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         ((let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n         [@env6 ])) false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env6": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env6 ]) b1 b2 in\n         ((let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n           [@env5 ])) false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env5 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env4 ]) s1 c0 in (s2, (c1 || c2)))\n    false false ((c2)[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, ((s2)[@env0 ]), s3, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env4 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env3 ]) s1 c0 in (s2, (c1 || c2)))\n    false false ((c2)[@env2 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    false false true in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  ((let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n    let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n  [@env4 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((((half_adder)[@env4 ]) b1 b2)[@env5 ]) in\n  ((let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))[@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((((half_adder)[@env4 ]) b1 b2)[@env5 ]) in\n  let (s2, c2) = ((((half_adder)[@env2 ]) s1 c0)[@env3 ]) in (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((((half_adder)[@env4 ]) b1 b2)[@env5 ]) in\n  let (s2, c2) = ((half_adder)[@env3 ]) s1 ((c0)[@env2 ]) in (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ]) in\n  let (s2, c2) = ((half_adder)[@env3 ]) s1 ((c0)[@env2 ]) in (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env10 ])",
              "envs": {
                "env10": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ]) in\n  let (s2, c2) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])) s1 ((c0)\n      [@env2 ]) in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env3 ])) s1 ((c0)\n      [@env2 ]) in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env3 ]), (b1 && b2))) s1 ((c0)\n      [@env2 ]) in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env6 ]) ((b1)[@env4 ]) ((b2)[@env5 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) s1 ((c0)\n      [@env2 ]) in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((half_adder)[@env5 ]) ((b1)[@env3 ]) ((b2)[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])) ((b1)\n      [@env3 ]) ((b2)[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env5 ])) ((b1)\n      [@env3 ]) ((b2)[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env5 ]), (b1 && b2))) ((b1)[@env3 ])\n      ((b2)[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env5 ]) b1 b2), (b1 && b2))) ((b1)\n      [@env3 ]) ((b2)[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) false ((b2)\n      [@env3 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) false false in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = ((((((xor)[@env3 ]) b1 b2), (b1 && b2)))[@env4 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = (((((xor)[@env3 ]) b1 b2)[@env4 ]), ((b1 && b2)[@env5 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((((xor)[@env5 ]) ((b1)[@env3 ]) ((b2)[@env4 ])), ((b1 && b2)[@env6 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((((xor)[@env5 ]) ((b1)[@env3 ]) ((b2)[@env4 ])),\n      (((b1)[@env6 ]) && ((b2)[@env7 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env9 ])",
              "envs": {
                "env9": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env6": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env7": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env3 ]) ((b2)[@env4 ])),\n      (((b1)[@env5 ]) && ((b2)[@env6 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false ((b2)[@env3 ])),\n      (((b1)[@env4 ]) && ((b2)[@env5 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false),\n      (((b1)[@env3 ]) && ((b2)[@env4 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false),\n      (false && ((b2)[@env3 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false false), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env3 ]), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((match (((b1, b2))[@env3 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((match (((b1)[@env3 ]), ((b2)[@env4 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((match (false, ((b2)[@env3 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) =\n    ((match (false, false) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = (false, (false && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s1, c1) = (false, false) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n  (s2, (c1 || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  ((let (s2, c2) =\n      (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) s1 true in\n    (s2, (c1 || c2)))\n  [@env3 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) s1 true)\n    [@env4 ]) in\n  (((s2, (c1 || c2)))[@env2 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) s1 true)\n    [@env4 ]) in\n  (s2, ((c1 || c2)[@env2 ])) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) s1 true)\n    [@env4 ]) in\n  (s2, (((c1)[@env2 ]) || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env4 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env3 ]) true in\n  (s2, (((c1)[@env2 ]) || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env2 ]) true in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) false true in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) = ((((((xor)[@env2 ]) b1 b2), (b1 && b2)))[@env3 ]) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) = (((((xor)[@env2 ]) b1 b2)[@env3 ]), ((b1 && b2)[@env4 ])) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((((xor)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ])), ((b1 && b2)[@env5 ])) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((((xor)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ])),\n      (((b1)[@env5 ]) && ((b2)[@env6 ]))) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env8 ])",
              "envs": {
                "env8": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env5": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env6": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env2 ]) ((b2)[@env3 ])),\n      (((b1)[@env4 ]) && ((b2)[@env5 ]))) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env7 ])",
              "envs": {
                "env7": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false ((b2)[@env2 ])),\n      (((b1)[@env3 ]) && ((b2)[@env4 ]))) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true),\n      (((b1)[@env2 ]) && ((b2)[@env3 ]))) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true), (false && ((b2)[@env2 ]))) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) false true), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env2 ]), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((match (((b1, b2))[@env2 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((match (((b1)[@env2 ]), ((b2)[@env3 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((match (false, ((b2)[@env2 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) =\n  let (s2, c2) =\n    ((match (false, true) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (false && true)) in\n  (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = let (s2, c2) = (true, (false && true)) in (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = let (s2, c2) = (true, false) in (s2, (false || c2)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (((s2, (false || c2)))[@env2 ]) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (((s2)[@env2 ]), ((false || c2)[@env3 ])) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (((s2)[@env2 ]), (false || ((c2)[@env3 ]))) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (true, (false || ((c2)[@env2 ]))) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (true, (false || false)) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s3, c3) = (true, false) in\nlet (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false c3 in\n((true, false, s3, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (s4, c4) =\n    (fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3 in\n  ((true, false, s3, s4), c4))\n[@env2 ])",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "s3": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((true, false, s3, s4), c4))[@env0 ])",
      "envs": {
        "env0": {
          "s3": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((((true, false, s3, s4))[@env0 ]), c4)",
      "envs": {
        "env0": {
          "s3": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (((fun b1 ->\n       fun b2 ->\n         fun c0 ->\n           let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n           let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n      true false c3)\n  [@env3 ]) in\n((true, false, ((s3)[@env0 ]), s4), c4)",
      "envs": {
        "env0": {
          "s3": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env3 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env2 ]) s1 c0 in (s2, (c1 || c2)))\n    true false ((c3)[@env1 ]) in\n((true, false, ((s3)[@env0 ]), s4), c4)",
      "envs": {
        "env0": {
          "s3": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env2 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env1 ]) s1 c0 in (s2, (c1 || c2)))\n    true false ((c3)[@env0 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c3": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  (fun b1 ->\n     fun b2 ->\n       fun c0 ->\n         let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n         let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n    true false false in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env2 ])",
              "envs": {
                "env2": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  ((let (s1, c1) = ((half_adder)[@env1 ]) b1 b2 in\n    let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))\n  [@env2 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])",
              "envs": {
                "env3": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((((half_adder)[@env2 ]) b1 b2)[@env3 ]) in\n  ((let (s2, c2) = ((half_adder)[@env0 ]) s1 c0 in (s2, (c1 || c2)))[@env1 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((((half_adder)[@env2 ]) b1 b2)[@env3 ]) in\n  let (s2, c2) = ((((half_adder)[@env0 ]) s1 c0)[@env1 ]) in (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((((half_adder)[@env2 ]) b1 b2)[@env3 ]) in\n  let (s2, c2) = ((half_adder)[@env1 ]) s1 ((c0)[@env0 ]) in (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ]) in\n  let (s2, c2) = ((half_adder)[@env1 ]) s1 ((c0)[@env0 ]) in (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env6 ])",
              "envs": {
                "env6": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ]) in\n  let (s2, c2) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env1 ])) s1 ((c0)\n      [@env0 ]) in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env1 ])) s1 ((c0)\n      [@env0 ]) in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env1 ]), (b1 && b2))) s1 ((c0)\n      [@env0 ]) in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env4 ]) ((b1)[@env2 ]) ((b2)[@env3 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) s1 ((c0)\n      [@env0 ]) in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c0": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env4": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env5 ])",
              "envs": {
                "env5": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((half_adder)[@env3 ]) ((b1)[@env1 ]) ((b2)[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "half_adder": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env4 ])",
              "envs": {
                "env4": {
                  "xor": {
                    "corec": [],
                    "expr": {
                      "expr":
                        "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> ((fun b2 -> ((xor b1 b2), (b1 && b2)))[@env3 ])) ((b1)\n      [@env1 ]) ((b2)[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor b1 b2), (b1 && b2)))[@env3 ])) ((b1)\n      [@env1 ]) ((b2)[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> (((xor b1 b2)[@env3 ]), (b1 && b2))) ((b1)[@env1 ])\n      ((b2)[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env3 ]) b1 b2), (b1 && b2))) ((b1)\n      [@env1 ]) ((b2)[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) true ((b2)\n      [@env1 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) true false in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = ((((((xor)[@env1 ]) b1 b2), (b1 && b2)))[@env2 ]) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = (((((xor)[@env1 ]) b1 b2)[@env2 ]), ((b1 && b2)[@env3 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((((xor)[@env3 ]) ((b1)[@env1 ]) ((b2)[@env2 ])), ((b1 && b2)[@env4 ])) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((((xor)[@env3 ]) ((b1)[@env1 ]) ((b2)[@env2 ])),\n      (((b1)[@env4 ]) && ((b2)[@env5 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env4": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env5": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env1 ]) ((b2)[@env2 ])),\n      (((b1)[@env3 ]) && ((b2)[@env4 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true ((b2)[@env1 ])),\n      (((b1)[@env2 ]) && ((b2)[@env3 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false),\n      (((b1)[@env1 ]) && ((b2)[@env2 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && ((b2)[@env1 ]))) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env1 ]), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((match (((b1, b2))[@env1 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((match (((b1)[@env1 ]), ((b2)[@env2 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((match (true, ((b2)[@env1 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) =\n    ((match (true, false) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = (true, (true && false)) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s1, c1) = (true, false) in\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n  (s2, (c1 || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  ((let (s2, c2) =\n      (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) s1 false in\n    (s2, (c1 || c2)))\n  [@env1 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env2 ]) in\n  (((s2, (c1 || c2)))[@env0 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env2 ]) in\n  (s2, ((c1 || c2)[@env0 ])) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) s1 false)\n    [@env2 ]) in\n  (s2, (((c1)[@env0 ]) || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env2": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env2 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env1 ]) false in\n  (s2, (((c1)[@env0 ]) || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c1": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env1 ]) b1 b2), (b1 && b2))) ((s1)\n      [@env0 ]) false in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "s1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (fun b1 -> fun b2 -> ((((xor)[@env0 ]) b1 b2), (b1 && b2))) true false in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) = ((((((xor)[@env0 ]) b1 b2), (b1 && b2)))[@env1 ]) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) = (((((xor)[@env0 ]) b1 b2)[@env1 ]), ((b1 && b2)[@env2 ])) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((((xor)[@env2 ]) ((b1)[@env0 ]) ((b2)[@env1 ])), ((b1 && b2)[@env3 ])) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((((xor)[@env2 ]) ((b1)[@env0 ]) ((b2)[@env1 ])),\n      (((b1)[@env3 ]) && ((b2)[@env4 ]))) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "xor": {
            "corec": [],
            "expr": {
              "expr":
                "fun b1 ->\n  fun b2 ->\n    match (b1, b2) with\n    | (true, true) -> false\n    | (true, false) -> true\n    | (false, true) -> true\n    | (false, false) -> false",
              "envs": {}
            }
          }
        },
        "env3": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env4": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) ((b1)[@env0 ]) ((b2)[@env1 ])),\n      (((b1)[@env2 ]) && ((b2)[@env3 ]))) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env2": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env3": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true ((b2)[@env0 ])),\n      (((b1)[@env1 ]) && ((b2)[@env2 ]))) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        },
        "env1": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env2": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false),\n      (((b1)[@env0 ]) && ((b2)[@env1 ]))) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && ((b2)[@env0 ]))) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((fun b1 ->\n         fun b2 ->\n           match (b1, b2) with\n           | (true, true) -> false\n           | (true, false) -> true\n           | (false, true) -> true\n           | (false, false) -> false) true false), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    (((match (b1, b2) with\n       | (true, true) -> false\n       | (true, false) -> true\n       | (false, true) -> true\n       | (false, false) -> false)[@env0 ]), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((match (((b1, b2))[@env0 ]) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } },
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((match (((b1)[@env0 ]), ((b2)[@env1 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b1": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((match (true, ((b2)[@env0 ])) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "b2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) =\n  let (s2, c2) =\n    ((match (true, false) with\n      | (true, true) -> false\n      | (true, false) -> true\n      | (false, true) -> true\n      | (false, false) -> false), (true && false)) in\n  (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = let (s2, c2) = (true, (true && false)) in (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = let (s2, c2) = (true, false) in (s2, (false || c2)) in\n((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = (((s2, (false || c2)))[@env0 ]) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = (((s2)[@env0 ]), ((false || c2)[@env1 ])) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = (((s2)[@env0 ]), (false || ((c2)[@env1 ]))) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "s2": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = (true, (false || ((c2)[@env0 ]))) in\n((true, false, true, s4), c4)",
      "envs": {
        "env0": {
          "c2": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (s4, c4) = (true, (false || false)) in ((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "let (s4, c4) = (true, false) in ((true, false, true, s4), c4)",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr": "((((true, false, true, s4), c4))[@env0 ])",
      "envs": {
        "env0": {
          "s4": { "corec": [], "expr": { "expr": "true", "envs": {} } },
          "c4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((((true, false, true, s4))[@env0 ]), ((c4)[@env1 ]))",
      "envs": {
        "env0": {
          "s4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "c4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((true, false, true, ((s4)[@env0 ])), ((c4)[@env1 ]))",
      "envs": {
        "env0": {
          "s4": { "corec": [], "expr": { "expr": "true", "envs": {} } }
        },
        "env1": {
          "c4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((true, false, true, true), ((c4)[@env0 ]))",
      "envs": {
        "env0": {
          "c4": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((true, false, true, true), false)",
      "envs": {}
    },
    "step": []
  }
]