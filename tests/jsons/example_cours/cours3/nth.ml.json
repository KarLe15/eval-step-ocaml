[
  {
    "current_expression": {
      "expr": "((nth [7; 8; 9; 10; 11] 3)[@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [7; 8; 9; 10; 11] 3",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs ->\n    fun i ->\n      match xs with\n      | [] -> raise (Failure \"nth\")\n      | x::xs -> if i = 0 then x else nth xs (i - 1))[@env0 ])\n  [7; 8; 9; 10; 11] 3",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   ((fun i ->\n       match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n   [@env0 ])) [7; 8; 9; 10; 11] 3",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     ((match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n     [@env0 ])) [7; 8; 9; 10; 11] 3",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     match xs with\n     | [] -> raise (Failure \"nth\")\n     | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n  [7; 8; 9; 10; 11] 3",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> raise (Failure \"nth\")\n  | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[7; 8; 9; 10; 11]", "envs": {} }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env2 ]) with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[7; 8; 9; 10; 11]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [7; 8; 9; 10; 11] with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if i = 0 then x else nth xs (i - 1))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "7", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "7", "envs": {} } },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "7", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i = 0)[@env2 ]) then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "7", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i)[@env2 ]) = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "7", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 3 = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "7", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "7", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) ((i - 1)[@env1 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) (((i)[@env1 ]) - 1)",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env1 ]) [8; 9; 10; 11] (((i)[@env0 ]) - 1)",
      "envs": {
        "env0": { "i": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [8; 9; 10; 11] (3 - 1)",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [8; 9; 10; 11] 2",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs ->\n    fun i ->\n      match xs with\n      | [] -> raise (Failure \"nth\")\n      | x::xs -> if i = 0 then x else nth xs (i - 1))[@env0 ]) [8; 9; 10; 11]\n  2",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   ((fun i ->\n       match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n   [@env0 ])) [8; 9; 10; 11] 2",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     ((match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n     [@env0 ])) [8; 9; 10; 11] 2",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     match xs with\n     | [] -> raise (Failure \"nth\")\n     | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n  [8; 9; 10; 11] 2",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> raise (Failure \"nth\")\n  | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env2 ]) with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[8; 9; 10; 11]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [8; 9; 10; 11] with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if i = 0 then x else nth xs (i - 1))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "8", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i = 0)[@env2 ]) then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i)[@env2 ]) = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 2 = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) ((i - 1)[@env1 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) (((i)[@env1 ]) - 1)",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env1 ]) [9; 10; 11] (((i)[@env0 ]) - 1)",
      "envs": {
        "env0": { "i": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [9; 10; 11] (2 - 1)",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [9; 10; 11] 1",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs ->\n    fun i ->\n      match xs with\n      | [] -> raise (Failure \"nth\")\n      | x::xs -> if i = 0 then x else nth xs (i - 1))[@env0 ]) [9; 10; 11] 1",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   ((fun i ->\n       match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n   [@env0 ])) [9; 10; 11] 1",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     ((match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n     [@env0 ])) [9; 10; 11] 1",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     match xs with\n     | [] -> raise (Failure \"nth\")\n     | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ])) [9; 10; 11]\n  1",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> raise (Failure \"nth\")\n  | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env2 ]) with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[9; 10; 11]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [9; 10; 11] with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if i = 0 then x else nth xs (i - 1))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "9", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "9", "envs": {} } },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "9", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i = 0)[@env2 ]) then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "9", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i)[@env2 ]) = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "9", "envs": {} } } },
        "env2": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 1 = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "9", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "9", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) ((i - 1)[@env1 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env2 ]) ((xs)[@env0 ]) (((i)[@env1 ]) - 1)",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env1 ]) [10; 11] (((i)[@env0 ]) - 1)",
      "envs": {
        "env0": { "i": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [10; 11] (1 - 1)",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((nth)[@env0 ]) [10; 11] 0",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs ->\n    fun i ->\n      match xs with\n      | [] -> raise (Failure \"nth\")\n      | x::xs -> if i = 0 then x else nth xs (i - 1))[@env0 ]) [10; 11] 0",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   ((fun i ->\n       match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n   [@env0 ])) [10; 11] 0",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     ((match xs with\n       | [] -> raise (Failure \"nth\")\n       | x::xs -> if i = 0 then x else nth xs (i - 1))\n     [@env0 ])) [10; 11] 0",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun i ->\n     match xs with\n     | [] -> raise (Failure \"nth\")\n     | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ])) [10; 11] 0",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> raise (Failure \"nth\")\n  | x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env2 ]) with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[10; 11]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [10; 11] with\n| [] -> raise (Failure \"nth\")\n| x::xs -> ((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if i = 0 then x else nth xs (i - 1))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "i": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((if i = 0 then x else nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i = 0)[@env2 ]) then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        },
        "env2": { "i": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((i)[@env2 ]) = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        },
        "env2": { "i": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 0 = 0 then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if true then ((x)[@env1 ]) else ((nth xs (i - 1))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[11]", "envs": {} } },
          "nth": {
            "corec": [ "nth" ],
            "expr": {
              "expr":
                "fun xs ->\n  fun i ->\n    match xs with\n    | [] -> raise (Failure \"nth\")\n    | x::xs -> if i = 0 then x else nth xs (i - 1)",
              "envs": {}
            }
          },
          "i": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "10", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  { "current_expression": { "expr": "10", "envs": {} }, "step": [] }
]