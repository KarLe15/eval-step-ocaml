[
  {
    "current_expression": {
      "expr":
        "(((mem 4 [0; 1; 2; 3; 4; 5; 6]) && (not (mem 8 [0; 1; 2; 3; 4; 5; 6])))\n[@env0 ])",
      "envs": {
        "env0": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem 4 [0; 1; 2; 3; 4; 5; 6])[@env0 ]) &&\n  ((not (mem 8 [0; 1; 2; 3; 4; 5; 6]))[@env1 ])",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  ((not (mem 8 [0; 1; 2; 3; 4; 5; 6]))[@env1 ])",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  (((not)[@env2 ]) ((mem 8 [0; 1; 2; 3; 4; 5; 6])[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  (((not)[@env2 ]) (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n   [@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n    [@env0 ])) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs -> ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n      [@env0 ])) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> false | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n  [@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [0; 1; 2; 3; 4; 5; 6] with\n | [] -> false\n | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = z) || (mem z xs))[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = z) || (mem z xs))[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((x = z)[@env0 ]) || ((mem z xs)[@env1 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((((x)[@env0 ]) = ((z)[@env1 ])) ||\n   (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env5 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env5": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "((0 = ((z)[@env0 ])) || (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env4 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "((0 = 4) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "((0 = 4) || (((mem)[@env1 ]) 4 ((xs)[@env0 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "((0 = 4) || (((mem)[@env0 ]) 4 [1; 2; 3; 4; 5; 6])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (((mem)[@env0 ]) 4 [1; 2; 3; 4; 5; 6])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (((fun z ->\n        fun xs ->\n          match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n      [@env0 ]) 4 [1; 2; 3; 4; 5; 6]))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((fun z ->\n       ((fun xs ->\n           match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n       [@env0 ])) 4 [1; 2; 3; 4; 5; 6]))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((fun z ->\n       fun xs ->\n         ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n         [@env0 ])) 4 [1; 2; 3; 4; 5; 6]))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((fun z ->\n       fun xs ->\n         match xs with\n         | [] -> false\n         | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 4 [1; 2; 3; 4; 5; 6]))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((match xs with | [] -> false | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n   [@env1 ]))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (match ((xs)[@env2 ]) with\n    | [] -> false\n    | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (match [1; 2; 3; 4; 5; 6] with\n    | [] -> false\n    | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (((x = z) || (mem z xs))[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (((x = z) || (mem z xs))[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n      (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env5 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env5": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   ((1 = ((z)[@env0 ])) || (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env4 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || ((1 = 4) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || ((1 = 4) || (((mem)[@env1 ]) 4 ((xs)[@env0 ])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || ((1 = 4) || (((mem)[@env0 ]) 4 [2; 3; 4; 5; 6]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (((mem)[@env0 ]) 4 [2; 3; 4; 5; 6]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (((fun z ->\n           fun xs ->\n             match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n         [@env0 ]) 4 [2; 3; 4; 5; 6])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((fun z ->\n          ((fun xs ->\n              match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n          [@env0 ])) 4 [2; 3; 4; 5; 6])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((fun z ->\n          fun xs ->\n            ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n            [@env0 ])) 4 [2; 3; 4; 5; 6])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 4 [2; 3; 4; 5; 6])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((match xs with\n        | [] -> false\n        | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n      [@env1 ])))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (match ((xs)[@env2 ]) with\n       | [] -> false\n       | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (match [2; 3; 4; 5; 6] with\n       | [] -> false\n       | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (((x = z) || (mem z xs))[@env0 ]))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n         (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env5 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env5": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      ((2 = ((z)[@env0 ])) || (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env4 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || ((2 = 4) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || ((2 = 4) || (((mem)[@env1 ]) 4 ((xs)[@env0 ]))))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || ((2 = 4) || (((mem)[@env0 ]) 4 [3; 4; 5; 6])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (((mem)[@env0 ]) 4 [3; 4; 5; 6])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (((fun z ->\n              fun xs ->\n                match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n            [@env0 ]) 4 [3; 4; 5; 6]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((fun z ->\n             ((fun xs ->\n                 match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n             [@env0 ])) 4 [3; 4; 5; 6]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((fun z ->\n             fun xs ->\n               ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n               [@env0 ])) 4 [3; 4; 5; 6]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((fun z ->\n             fun xs ->\n               match xs with\n               | [] -> false\n               | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 4 [3; 4; 5; 6]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((match xs with\n           | [] -> false\n           | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n         [@env1 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (match ((xs)[@env2 ]) with\n          | [] -> false\n          | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (match [3; 4; 5; 6] with\n          | [] -> false\n          | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (((x = z) || (mem z xs))[@env0 ])))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n            (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env5 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env5": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         ((3 = ((z)[@env0 ])) ||\n            (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env4 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false || ((3 = 4) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || (false || ((3 = 4) || (((mem)[@env1 ]) 4 ((xs)[@env0 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || ((3 = 4) || (((mem)[@env0 ]) 4 [4; 5; 6])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (false || (((mem)[@env0 ]) 4 [4; 5; 6]))))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            (((fun z ->\n                 fun xs ->\n                   match xs with\n                   | [] -> false\n                   | x::xs -> (x = z) || (mem z xs))[@env0 ]) 4 [4; 5; 6])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((fun z ->\n                ((fun xs ->\n                    match xs with\n                    | [] -> false\n                    | x::xs -> (x = z) || (mem z xs))\n                [@env0 ])) 4 [4; 5; 6])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((fun z ->\n                fun xs ->\n                  ((match xs with\n                    | [] -> false\n                    | x::xs -> (x = z) || (mem z xs))\n                  [@env0 ])) 4 [4; 5; 6])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((fun z ->\n                fun xs ->\n                  match xs with\n                  | [] -> false\n                  | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 4 [4; 5; 6])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((match xs with\n              | [] -> false\n              | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n            [@env1 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            (match ((xs)[@env2 ]) with\n             | [] -> false\n             | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            (match [4; 5; 6] with\n             | [] -> false\n             | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false || (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (false || (((x = z) || (mem z xs))[@env0 ])))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n               (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env5 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env5": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((4 = ((z)[@env0 ])) ||\n               (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ])))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env4 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false ||\n         (false ||\n            ((4 = 4) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false ||\n      (false || (false || ((4 = 4) || (((mem)[@env1 ]) 4 ((xs)[@env0 ])))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || (false || (false || ((4 = 4) || (((mem)[@env0 ]) 4 [5; 6]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false ||\n   (false || (false || (false || (true || (((mem)[@env0 ]) 4 [5; 6]))))))\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || (false || true)))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || (false || true))) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || (false || true)) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(false || true) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n        [@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n         [@env0 ])) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n           [@env0 ])) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n        [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> (((x = z) || (mem z xs))[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [0; 1; 2; 3; 4; 5; 6] with\n      | [] -> false\n      | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((x = z) || (mem z xs))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((x = z) || (mem z xs))[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ])))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n        (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((0 = ((z)[@env0 ])) || (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((0 = 8) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((0 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ]))))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((0 = 8) || (((mem)[@env0 ]) 8 [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (((mem)[@env0 ]) 8 [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (((fun z ->\n             fun xs ->\n               match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n           [@env0 ]) 8 [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((fun z ->\n            ((fun xs ->\n                match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n            [@env0 ])) 8 [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((fun z ->\n            fun xs ->\n              ((match xs with | [] -> false | x::xs -> (x = z) || (mem z xs))\n              [@env0 ])) 8 [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((fun z ->\n            fun xs ->\n              match xs with\n              | [] -> false\n              | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n           [1; 2; 3; 4; 5; 6])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((match xs with\n          | [] -> false\n          | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n        [@env1 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (match ((xs)[@env2 ]) with\n         | [] -> false\n         | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (match [1; 2; 3; 4; 5; 6] with\n         | [] -> false\n         | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (((x = z) || (mem z xs))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (((x = z) || (mem z xs))[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ]))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n           (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        ((1 = ((z)[@env0 ])) ||\n           (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ])))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || ((1 = 8) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || ((1 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ])))))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || ((1 = 8) || (((mem)[@env0 ]) 8 [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (((mem)[@env0 ]) 8 [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (((fun z ->\n                fun xs ->\n                  match xs with\n                  | [] -> false\n                  | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n              [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((fun z ->\n               ((fun xs ->\n                   match xs with\n                   | [] -> false\n                   | x::xs -> (x = z) || (mem z xs))\n               [@env0 ])) 8 [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((fun z ->\n               fun xs ->\n                 ((match xs with\n                   | [] -> false\n                   | x::xs -> (x = z) || (mem z xs))\n                 [@env0 ])) 8 [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((fun z ->\n               fun xs ->\n                 match xs with\n                 | [] -> false\n                 | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n              [2; 3; 4; 5; 6]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((match xs with\n             | [] -> false\n             | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n           [@env1 ]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (match ((xs)[@env2 ]) with\n            | [] -> false\n            | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (match [2; 3; 4; 5; 6] with\n            | [] -> false\n            | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (((x = z) || (mem z xs))[@env0 ]))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ])))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n              (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           ((2 = ((z)[@env0 ])) ||\n              (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || ((2 = 8) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || ((2 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ]))))))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || ((2 = 8) || (((mem)[@env0 ]) 8 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (((mem)[@env0 ]) 8 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (((fun z ->\n                   fun xs ->\n                     match xs with\n                     | [] -> false\n                     | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n                 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((fun z ->\n                  ((fun xs ->\n                      match xs with\n                      | [] -> false\n                      | x::xs -> (x = z) || (mem z xs))\n                  [@env0 ])) 8 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((fun z ->\n                  fun xs ->\n                    ((match xs with\n                      | [] -> false\n                      | x::xs -> (x = z) || (mem z xs))\n                    [@env0 ])) 8 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((fun z ->\n                  fun xs ->\n                    match xs with\n                    | [] -> false\n                    | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n                 [3; 4; 5; 6])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((match xs with\n                | [] -> false\n                | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n              [@env1 ])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (match ((xs)[@env2 ]) with\n               | [] -> false\n               | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (match [3; 4; 5; 6] with\n               | [] -> false\n               | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (((x = z) || (mem z xs))[@env0 ])))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ]))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n                 (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((3 = ((z)[@env0 ])) ||\n                 (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ])))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              ((3 = 8) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || ((3 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ])))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || ((3 = 8) || (((mem)[@env0 ]) 8 [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (false || (((mem)[@env0 ]) 8 [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (((fun z ->\n                      fun xs ->\n                        match xs with\n                        | [] -> false\n                        | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n                    [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((fun z ->\n                     ((fun xs ->\n                         match xs with\n                         | [] -> false\n                         | x::xs -> (x = z) || (mem z xs))\n                     [@env0 ])) 8 [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((fun z ->\n                     fun xs ->\n                       ((match xs with\n                         | [] -> false\n                         | x::xs -> (x = z) || (mem z xs))\n                       [@env0 ])) 8 [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((fun z ->\n                     fun xs ->\n                       match xs with\n                       | [] -> false\n                       | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n                    [4; 5; 6]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((match xs with\n                   | [] -> false\n                   | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n                 [@env1 ]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (match ((xs)[@env2 ]) with\n                  | [] -> false\n                  | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (match [4; 5; 6] with\n                  | [] -> false\n                  | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || (false || (((x = z) || (mem z xs))[@env0 ]))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ])))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n                    (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((4 = ((z)[@env0 ])) ||\n                    (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 ((4 = 8) || (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false || ((4 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ]))))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || ((4 = 8) || (((mem)[@env0 ]) 8 [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false || (false || (false || (false || (((mem)[@env0 ]) 8 [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (((fun z ->\n                         fun xs ->\n                           match xs with\n                           | [] -> false\n                           | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n                       [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((fun z ->\n                        ((fun xs ->\n                            match xs with\n                            | [] -> false\n                            | x::xs -> (x = z) || (mem z xs))\n                        [@env0 ])) 8 [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((fun z ->\n                        fun xs ->\n                          ((match xs with\n                            | [] -> false\n                            | x::xs -> (x = z) || (mem z xs))\n                          [@env0 ])) 8 [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((fun z ->\n                        fun xs ->\n                          match xs with\n                          | [] -> false\n                          | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n                       [5; 6])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((match xs with\n                      | [] -> false\n                      | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n                    [@env1 ])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (match ((xs)[@env2 ]) with\n                     | [] -> false\n                     | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (match [5; 6] with\n                     | [] -> false\n                     | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || (((x = z) || (mem z xs))[@env2 ][@env1 ][@env0 ])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false || (false || (((x = z) || (mem z xs))[@env1 ][@env0 ])))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || (false || (((x = z) || (mem z xs))[@env0 ])))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ]))))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)[@env2 ]))))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n                       (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ])))))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((5 = ((z)[@env0 ])) ||\n                       (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ])))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    ((5 = 8) ||\n                       (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || ((5 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ])))))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false || (false || ((5 = 8) || (((mem)[@env0 ]) 8 [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || (false || (false || (((mem)[@env0 ]) 8 [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (((fun z ->\n                            fun xs ->\n                              match xs with\n                              | [] -> false\n                              | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n                          [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((fun z ->\n                           ((fun xs ->\n                               match xs with\n                               | [] -> false\n                               | x::xs -> (x = z) || (mem z xs))\n                           [@env0 ])) 8 [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((fun z ->\n                           fun xs ->\n                             ((match xs with\n                               | [] -> false\n                               | x::xs -> (x = z) || (mem z xs))\n                             [@env0 ])) 8 [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((fun z ->\n                           fun xs ->\n                             match xs with\n                             | [] -> false\n                             | x::xs -> (((x = z) || (mem z xs))[@env0 ])) 8\n                          [6]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((match xs with\n                         | [] -> false\n                         | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n                       [@env1 ]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (match ((xs)[@env2 ]) with\n                        | [] -> false\n                        | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (match [6] with\n                        | [] -> false\n                        | x::xs -> (((x = z) || (mem z xs))[@env1 ][@env0 ])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false || (((x = z) || (mem z xs))\n                       [@env2 ][@env1 ][@env0 ]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false || (((x = z) || (mem z xs))[@env1 ][@env0 ]))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || (false || (((x = z) || (mem z xs))[@env0 ]))))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false || (((x = z)[@env0 ]) || ((mem z xs)[@env1 ])))))))))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((((x)[@env0 ]) = ((z)[@env1 ])) || ((mem z xs)\n                          [@env2 ])))))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((((x)[@env0 ]) = ((z)[@env1 ])) ||\n                          (((mem)[@env4 ]) ((z)[@env2 ]) ((xs)[@env3 ]))))))))))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env4": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((6 = ((z)[@env0 ])) ||\n                          (((mem)[@env3 ]) ((z)[@env1 ]) ((xs)[@env2 ]))))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       ((6 = 8) ||\n                          (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ]))))))))))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false || ((6 = 8) || (((mem)[@env1 ]) 8 ((xs)[@env0 ]))))))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || (false || ((6 = 8) || (((mem)[@env0 ]) 8 [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false || (false || (false || (((mem)[@env0 ]) 8 [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          (((fun z ->\n                               fun xs ->\n                                 match xs with\n                                 | [] -> false\n                                 | x::xs -> (x = z) || (mem z xs))[@env0 ]) 8\n                             [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          ((fun z ->\n                              ((fun xs ->\n                                  match xs with\n                                  | [] -> false\n                                  | x::xs -> (x = z) || (mem z xs))\n                              [@env0 ])) 8 [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          ((fun z ->\n                              fun xs ->\n                                ((match xs with\n                                  | [] -> false\n                                  | x::xs -> (x = z) || (mem z xs))\n                                [@env0 ])) 8 [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          ((fun z ->\n                              fun xs ->\n                                match xs with\n                                | [] -> false\n                                | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n                             8 [])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          ((match xs with\n                            | [] -> false\n                            | x::xs -> (((x = z) || (mem z xs))[@env0 ]))\n                          [@env1 ])))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          (match ((xs)[@env2 ]) with\n                           | [] -> false\n                           | x::xs -> (((x = z) || (mem z xs))\n                               [@env1 ][@env0 ]))))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false ||\n              (false ||\n                 (false ||\n                    (false ||\n                       (false ||\n                          (match [] with\n                           | [] -> false\n                           | x::xs -> (((x = z) || (mem z xs))\n                               [@env1 ][@env0 ]))))))))))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs -> match xs with | [] -> false | x::xs -> (x = z) || (mem z xs)",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false ||\n        (false ||\n           (false || (false || (false || (false || (false || false))))))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (false || (false || (false || false)))))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (false || (false || false))))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || (false || false)))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || (false || false))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (false || (false || false)))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) (false || false))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true && ((fun b -> match b with | true -> false | false -> true) false)",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true && ((match b with | true -> false | false -> true)[@env0 ])",
      "envs": {
        "env0": {
          "b": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true && (match ((b)[@env0 ]) with | true -> false | false -> true)",
      "envs": {
        "env0": {
          "b": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "true && (match false with | true -> false | false -> true)",
      "envs": {}
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": { "expr": "true && true", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "true", "envs": {} }, "step": [] }
]