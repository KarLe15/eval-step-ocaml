[
  {
    "current_expression": {
      "expr": "((length [0; 1; 2; 3; 4; 5])[@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [],
            "expr": {
              "expr":
                "fun xs ->\n  let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\n  loop xs 0",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((length)[@env0 ]) [0; 1; 2; 3; 4; 5]",
      "envs": {
        "env0": {
          "length": {
            "corec": [],
            "expr": {
              "expr":
                "fun xs ->\n  let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\n  loop xs 0",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\n   loop xs 0) [0; 1; 2; 3; 4; 5]",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\n  loop xs 0)\n[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop =\n  ((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env1 ]) in\n((loop xs 0)[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop =\n  ((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env1 ]) in\nloop ((xs)[@env0 ]) 0",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\nloop ((xs)[@env0 ]) 0",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let rec loop xs r = match xs with | [] -> r | _::xs -> loop xs (1 + r) in\nloop [0; 1; 2; 3; 4; 5] 0",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr": "((loop [0; 1; 2; 3; 4; 5] 0)[@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [0; 1; 2; 3; 4; 5] 0",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [0; 1; 2; 3; 4; 5] 0",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [0; 1; 2; 3; 4; 5] 0",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [0; 1; 2; 3; 4; 5] 0",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [0; 1; 2; 3; 4; 5] 0",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [0; 1; 2; 3; 4; 5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [1; 2; 3; 4; 5] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [1; 2; 3; 4; 5] (1 + 0)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [1; 2; 3; 4; 5] 1",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [1; 2; 3; 4; 5] 1",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [1; 2; 3; 4; 5] 1",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [1; 2; 3; 4; 5] 1",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [1; 2; 3; 4; 5] 1",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [1; 2; 3; 4; 5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [2; 3; 4; 5] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [2; 3; 4; 5] (1 + 1)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [2; 3; 4; 5] 2",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [2; 3; 4; 5] 2",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [2; 3; 4; 5] 2",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [2; 3; 4; 5] 2",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [2; 3; 4; 5] 2",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          },
          "r": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [2; 3; 4; 5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [3; 4; 5] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [3; 4; 5] (1 + 2)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [3; 4; 5] 3",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [3; 4; 5] 3",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [3; 4; 5] 3",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [3; 4; 5] 3",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [3; 4; 5] 3",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [3; 4; 5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [4; 5] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [4; 5] (1 + 3)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [4; 5] 4",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [4; 5] 4",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [4; 5] 4",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [4; 5] 4",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [4; 5] 4",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [4; 5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [5] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [5] (1 + 4)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [5] 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [5] 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [5] 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [5] 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [5] 5",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [5] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((loop xs (1 + r))[@env0 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) ((1 + r)[@env1 ])",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env2 ]) ((xs)[@env0 ]) (1 + ((r)[@env1 ]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env1 ]) [] (1 + ((r)[@env0 ]))",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [] (1 + 5)",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((loop)[@env0 ]) [] 6",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n  [@env0 ]) [] 6",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r))\n   [@env0 ])) [] 6",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> ((match xs with | [] -> r | _::xs -> loop xs (1 + r))[@env0 ]))\n  [] 6",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun r -> match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))\n  [] 6",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> r | _::xs -> ((loop xs (1 + r))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "r": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [] with\n| [] -> ((r)[@env0 ])\n| _::xs -> ((loop xs (1 + r))[@env2 ][@env1 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env1": {
          "loop": {
            "corec": [ "loop" ],
            "expr": {
              "expr":
                "fun xs -> fun r -> match xs with | [] -> r | _::xs -> loop xs (1 + r)",
              "envs": {}
            }
          }
        },
        "env2": { "r": { "corec": [], "expr": { "expr": "6", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((r)[@env0 ])",
      "envs": {
        "env0": { "r": { "corec": [], "expr": { "expr": "6", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  { "current_expression": { "expr": "6", "envs": {} }, "step": [] }
]