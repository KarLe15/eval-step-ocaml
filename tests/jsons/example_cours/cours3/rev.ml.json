[
  {
    "current_expression": {
      "expr": "((rev [0; 1; 2; 3; 4])[@env0 ])",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((rev)[@env0 ]) [0; 1; 2; 3; 4]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env0 ]))\n  [@env1 ]) [0; 1; 2; 3; 4]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n   [@env1 ][@env0 ])) [0; 1; 2; 3; 4]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env0 ]))\n  [0; 1; 2; 3; 4]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n  [0; 1; 2; 3; 4]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env1 ]) with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ])",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [0; 1; 2; 3; 4] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ])",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "(((rev xs) @ [x])[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((rev xs) @ [x])[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env1 ])",
              "envs": {
                "env1": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env2 ]) ((rev xs)[@env0 ]) (([x])[@env1 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) [((x)[@env2 ])]",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (((rev)[@env0 ]) [1; 2; 3; 4]) [((x)[@env1 ])]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (((rev)[@env0 ]) [1; 2; 3; 4]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  (((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env0 ]))\n     [@env1 ]) [1; 2; 3; 4]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n      [@env1 ][@env0 ])) [1; 2; 3; 4]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env0 ]))\n     [1; 2; 3; 4]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  ((fun xs -> match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n     [1; 2; 3; 4]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))[@env1 ])\n  [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  (match ((xs)[@env1 ]) with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n  [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4]", "envs": {} }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  (match [1; 2; 3; 4] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n  [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env2 ]) (((rev xs) @ [x])[@env1 ][@env0 ]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (((rev xs) @ [x])[@env0 ]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env2 ])",
              "envs": {
                "env2": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((((@))[@env2 ]) ((rev xs)[@env0 ]) (([x])[@env1 ])) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])) \n  [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])) \n  [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) [((x)[@env2 ])]) \n  [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((((@))[@env2 ]) (((rev)[@env0 ]) [2; 3; 4]) [((x)[@env1 ])])\n  [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (((rev)[@env0 ]) [2; 3; 4]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     (((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n          [@env0 ]))[@env1 ]) [2; 3; 4]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n         [@env1 ][@env0 ])) [2; 3; 4]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n         [@env0 ])) [2; 3; 4]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     ((fun xs ->\n         match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n        [2; 3; 4]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n     [@env1 ]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     (match ((xs)[@env1 ]) with\n      | [] -> []\n      | x::xs -> (((rev xs) @ [x])[@env0 ])) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[2; 3; 4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     (match [2; 3; 4] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((((@))[@env2 ]) (((rev xs) @ [x])[@env1 ][@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (((rev xs) @ [x])[@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env3 ])",
              "envs": {
                "env3": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((((@))[@env2 ]) ((rev xs)[@env0 ]) (([x])[@env1 ])) [1])\n  [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])) \n     [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ])) \n     [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) [((x)[@env2 ])]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((((@))[@env2 ]) (((rev)[@env0 ]) [3; 4]) [((x)[@env1 ])])\n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) (((rev)[@env0 ]) [3; 4]) [2]) [1]) \n  [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        (((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n             [@env0 ]))[@env1 ]) [3; 4]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n            [@env1 ][@env0 ])) [3; 4]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n            [@env0 ])) [3; 4]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        ((fun xs ->\n            match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n           [3; 4]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n        [@env1 ]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        (match ((xs)[@env1 ]) with\n         | [] -> []\n         | x::xs -> (((rev xs) @ [x])[@env0 ])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        (match [3; 4] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((((@))[@env2 ]) (((rev xs) @ [x])[@env1 ][@env0 ]) [2])\n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) (((rev xs) @ [x])[@env0 ]) [2]) [1]) \n  [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env4 ])",
              "envs": {
                "env4": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) ((((@))[@env2 ]) ((rev xs)[@env0 ]) (([x])[@env1 ]))\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ]))\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ]))\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) [((x)[@env2 ])])\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) ((((@))[@env2 ]) (((rev)[@env0 ]) [4]) [((x)[@env1 ])])\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) ((((@))[@env1 ]) (((rev)[@env0 ]) [4]) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           (((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n                [@env0 ]))[@env1 ]) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n               [@env1 ][@env0 ])) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           ((fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n               [@env0 ])) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           ((fun xs ->\n               match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n              [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((match xs with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n           [@env1 ]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           (match ((xs)[@env1 ]) with\n            | [] -> []\n            | x::xs -> (((rev xs) @ [x])[@env0 ])) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           (match [4] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ]) (((rev xs) @ [x])[@env1 ][@env0 ]) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) ((((@))[@env1 ]) (((rev xs) @ [x])[@env0 ]) [3]) [2])\n     [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env5 ])",
              "envs": {
                "env5": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ]) ((((@))[@env2 ]) ((rev xs)[@env0 ]) (([x])[@env1 ]))\n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env7 ])\n  ((((@))[@env6 ])\n     ((((@))[@env5 ])\n        ((((@))[@env4 ])\n           ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ]))\n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env8 ])",
              "envs": {
                "env8": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env7": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env7 ])\n  ((((@))[@env6 ])\n     ((((@))[@env5 ])\n        ((((@))[@env4 ])\n           ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) (([x])[@env2 ]))\n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env8 ])",
              "envs": {
                "env8": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env7": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env7 ])\n  ((((@))[@env6 ])\n     ((((@))[@env5 ])\n        ((((@))[@env4 ])\n           ((((@))[@env3 ]) (((rev)[@env1 ]) ((xs)[@env0 ])) [((x)[@env2 ])])\n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env8 ])",
              "envs": {
                "env8": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env7": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           ((((@))[@env2 ]) (((rev)[@env0 ]) []) [((x)[@env1 ])]) [3]) \n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ]) ((((@))[@env1 ]) (((rev)[@env0 ]) []) [4]) [3]) \n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           ((((@))[@env2 ])\n              (((fun xs ->\n                   ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n                   [@env0 ]))[@env1 ]) []) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           ((((@))[@env2 ])\n              ((fun xs ->\n                  ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n                  [@env1 ][@env0 ])) []) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((((@))[@env1 ])\n              ((fun xs ->\n                  ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])\n                  [@env0 ])) []) [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((((@))[@env1 ])\n              ((fun xs ->\n                  match xs with\n                  | [] -> []\n                  | x::xs -> (((rev xs) @ [x])[@env0 ])) []) [4]) [3]) \n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           ((((@))[@env2 ])\n              ((match xs with\n                | [] -> []\n                | x::xs -> (((rev xs) @ [x])[@env0 ]))[@env1 ]) [4]) \n           [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           ((((@))[@env2 ])\n              (match ((xs)[@env1 ]) with\n               | [] -> []\n               | x::xs -> (((rev xs) @ [x])[@env0 ])) [4]) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env7 ])",
              "envs": {
                "env7": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((((@))[@env1 ])\n              (match [] with | [] -> [] | x::xs -> (((rev xs) @ [x])[@env0 ]))\n              [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "rev": {
            "corec": [ "rev" ],
            "expr": {
              "expr":
                "fun xs -> ((match xs with | [] -> [] | x::xs -> (rev xs) @ [x])[@env6 ])",
              "envs": {
                "env6": {
                  "@": {
                    "corec": [ "@" ],
                    "expr": {
                      "expr":
                        "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
                      "envs": {}
                    }
                  }
                }
              }
            }
          },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) ((((@))[@env1 ]) ((((@))[@env0 ]) [] [4]) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           (((fun xs ->\n                fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n              [@env0 ]) [] [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           ((fun xs ->\n               ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n               [@env0 ])) [] [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           ((fun xs ->\n               fun ys ->\n                 ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n                 [@env0 ])) [] [4]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((((@))[@env1 ])\n           ((fun xs ->\n               fun ys ->\n                 match xs with\n                 | [] -> ys\n                 | x::zs -> ((x :: (zs @ ys))[@env0 ])) [] [4]) [3]) \n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        ((((@))[@env2 ])\n           ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n           [@env1 ]) [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env7 ])\n  ((((@))[@env6 ])\n     ((((@))[@env5 ])\n        ((((@))[@env4 ])\n           (match ((xs)[@env3 ]) with\n            | [] -> ((ys)[@env0 ])\n            | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env7": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        ((((@))[@env3 ])\n           (match [] with\n            | [] -> ((ys)[@env0 ])\n            | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [3]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((((@))[@env2 ]) ((((@))[@env1 ]) ((ys)[@env0 ]) [3]) [2])\n     [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) ((((@))[@env0 ]) [4] [3]) [2]) [1]) \n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        (((fun xs ->\n             fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n           [@env0 ]) [4] [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        ((fun xs ->\n            ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n            [@env0 ])) [4] [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        ((fun xs ->\n            fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n              [@env0 ])) [4] [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ])\n        ((fun xs ->\n            fun ys ->\n              match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n           [4] [3]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ])\n        ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n        [@env1 ]) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ])\n        (match ((xs)[@env3 ]) with\n         | [] -> ((ys)[@env0 ])\n         | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ])\n        (match [4] with\n         | [] -> ((ys)[@env0 ])\n         | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ]) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((((@))[@env2 ]) ((x :: (zs @ ys))[@env1 ][@env0 ]) [2])\n     [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [2]) [1]) \n  [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [2]) [1]) \n  [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) (((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [2]) [1]) \n  [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ]) (((x)[@env0 ]) ::\n        ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [2]) [1]) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) (4 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ])))\n        [2]) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) (4 :: ((((@))[@env1 ]) [] ((ys)[@env0 ]))) [2]) \n     [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) (4 :: ((((@))[@env0 ]) [] [3])) [2]) [1])\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ]) (4 ::\n        (((fun xs ->\n             fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n           [@env0 ]) [] [3])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ]) (4 ::\n        ((fun xs ->\n            ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n            [@env0 ])) [] [3])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ]) (4 ::\n        ((fun xs ->\n            fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n              [@env0 ])) [] [3])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((((@))[@env1 ]) (4 ::\n        ((fun xs ->\n            fun ys ->\n              match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n           [] [3])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     ((((@))[@env2 ]) (4 ::\n        ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n        [@env1 ])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env6 ])\n  ((((@))[@env5 ])\n     ((((@))[@env4 ]) (4 ::\n        (match ((xs)[@env3 ]) with\n         | [] -> ((ys)[@env0 ])\n         | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env6": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     ((((@))[@env3 ]) (4 ::\n        (match [] with\n         | [] -> ((ys)[@env0 ])\n         | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) ((((@))[@env1 ]) (4 :: ((ys)[@env0 ])) [2]) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) ((((@))[@env0 ]) [4; 3] [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     (((fun xs ->\n          fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ]) [4; 3] [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     ((fun xs ->\n         ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n         [@env0 ])) [4; 3] [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     ((fun xs ->\n         fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n           [@env0 ])) [4; 3] [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ])\n     ((fun xs ->\n         fun ys ->\n           match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n        [4; 3] [2]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ])\n     ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n     [@env1 ]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 3]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ])\n     (match ((xs)[@env3 ]) with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4; 3]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ])\n     (match [4; 3] with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((((@))[@env2 ]) ((x :: (zs @ ys))[@env1 ][@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((((@))[@env2 ]) (((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [1])\n  [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ]) (((x)[@env0 ]) ::\n     ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [1]) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (4 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))) [1])\n  [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 :: ((((@))[@env1 ]) [3] ((ys)[@env0 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (4 :: ((((@))[@env0 ]) [3] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 ::\n     (((fun xs ->\n          fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ]) [3] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 ::\n     ((fun xs ->\n         ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n         [@env0 ])) [3] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 ::\n     ((fun xs ->\n         fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n           [@env0 ])) [3] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 ::\n     ((fun xs ->\n         fun ys ->\n           match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n        [3] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 ::\n     ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n     [@env1 ])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ]) (4 ::\n     (match ((xs)[@env3 ]) with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[3]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (4 ::\n     (match [3] with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (4 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])) [1]) \n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 :: ((x :: (zs @ ys))[@env1 ][@env0 ])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (4 :: ((x :: (zs @ ys))[@env0 ])) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (4 :: ((x :: (zs @ ys))[@env0 ])) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [1]) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ]) (4 :: ((x)[@env0 ]) ::\n     ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [1]) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (4 :: 3 ::\n     ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 :: 3 :: ((((@))[@env1 ]) [] ((ys)[@env0 ]))) [1]) \n  [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (4 :: 3 :: ((((@))[@env0 ]) [] [2])) [1])\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 :: 3 ::\n     (((fun xs ->\n          fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ]) [] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 :: 3 ::\n     ((fun xs ->\n         ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n         [@env0 ])) [] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 :: 3 ::\n     ((fun xs ->\n         fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n           [@env0 ])) [] [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((((@))[@env1 ]) (4 :: 3 ::\n     ((fun xs ->\n         fun ys ->\n           match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ])) []\n        [2])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  ((((@))[@env2 ]) (4 :: 3 ::\n     ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n     [@env1 ])) [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env5 ])\n  ((((@))[@env4 ]) (4 :: 3 ::\n     (match ((xs)[@env3 ]) with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env5": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  ((((@))[@env3 ]) (4 :: 3 ::\n     (match [] with\n      | [] -> ((ys)[@env0 ])\n      | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) ((((@))[@env1 ]) (4 :: 3 :: ((ys)[@env0 ])) [1]) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) ((((@))[@env0 ]) [4; 3; 2] [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  (((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n     [@env0 ]) [4; 3; 2] [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  ((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n      [@env0 ])) [4; 3; 2] [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  ((fun xs ->\n      fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ])) [4; 3; 2] [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ])\n  ((fun xs ->\n      fun ys ->\n        match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n     [4; 3; 2] [1]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ])\n  ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ])\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 3; 2]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ])\n  (match ((xs)[@env3 ]) with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[4; 3; 2]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ])\n  (match [4; 3; 2] with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env2 ]) ((x :: (zs @ ys))[@env1 ][@env0 ]) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) ((x :: (zs @ ys))[@env0 ]) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env2 ]) (((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (((x)[@env0 ]) ::\n  ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: ((((@))[@env1 ]) [3; 2] ((ys)[@env0 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: ((((@))[@env0 ]) [3; 2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 ::\n  (((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n     [@env0 ]) [3; 2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 ::\n  ((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n      [@env0 ])) [3; 2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 ::\n  ((fun xs ->\n      fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ])) [3; 2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 ::\n  ((fun xs ->\n      fun ys ->\n        match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n     [3; 2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 ::\n  ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ]))\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (4 ::\n  (match ((xs)[@env3 ]) with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[3; 2]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 ::\n  (match [3; 2] with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env2 ]) (4 :: ((x :: (zs @ ys))[@env1 ][@env0 ])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: ((x :: (zs @ ys))[@env0 ])) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: ((x :: (zs @ ys))[@env0 ])) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (4 :: ((x)[@env0 ]) ::\n  ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: 3 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ])))\n  [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 :: ((((@))[@env1 ]) [2] ((ys)[@env0 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: 3 :: ((((@))[@env0 ]) [2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 ::\n  (((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n     [@env0 ]) [2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 ::\n  ((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n      [@env0 ])) [2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 ::\n  ((fun xs ->\n      fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ])) [2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 ::\n  ((fun xs ->\n      fun ys ->\n        match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ])) \n     [2] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 ::\n  ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ]))\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (4 :: 3 ::\n  (match ((xs)[@env3 ]) with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[2]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: 3 ::\n  (match [2] with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: 3 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 :: ((x :: (zs @ ys))[@env1 ][@env0 ])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: 3 :: ((x :: (zs @ ys))[@env0 ])) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: 3 :: ((x :: (zs @ ys))[@env0 ])) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (4 :: 3 :: ((x)[@env0 ]) ::\n  ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))) [0]",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: 3 :: 2 ::\n  ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))) [0]",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 :: 2 :: ((((@))[@env1 ]) [] ((ys)[@env0 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: 3 :: 2 :: ((((@))[@env0 ]) [] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 :: 2 ::\n  (((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n     [@env0 ]) [] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 :: 2 ::\n  ((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n      [@env0 ])) [] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 :: 2 ::\n  ((fun xs ->\n      fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n        [@env0 ])) [] [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env1 ]) (4 :: 3 :: 2 ::\n  ((fun xs ->\n      fun ys ->\n        match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ])) []\n     [1])) [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env2 ]) (4 :: 3 :: 2 ::\n  ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ]))\n  [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env4 ]) (4 :: 3 :: 2 ::\n  (match ((xs)[@env3 ]) with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env4": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((@))[@env3 ]) (4 :: 3 :: 2 ::\n  (match [] with\n   | [] -> ((ys)[@env0 ])\n   | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env1 ]) (4 :: 3 :: 2 :: ((ys)[@env0 ])) [0]",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "(((@))[@env0 ]) [4; 3; 2; 1] [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n  [@env0 ]) [4; 3; 2; 1] [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n   [@env0 ])) [4; 3; 2; 1] [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))[@env0 ]))\n  [4; 3; 2; 1] [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs ->\n   fun ys -> match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n  [4; 3; 2; 1] [0]",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[4; 3; 2; 1]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env3 ]) with\n| [] -> ((ys)[@env0 ])\n| x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[4; 3; 2; 1]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [4; 3; 2; 1] with\n| [] -> ((ys)[@env0 ])\n| x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ])",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((x :: (zs @ ys))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((x)[@env0 ]) :: ((zs @ ys)[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((x)[@env0 ]) :: ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((((@))[@env1 ]) [3; 2; 1] ((ys)[@env0 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((((@))[@env0 ]) [3; 2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n(((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n   [@env0 ]) [3; 2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n    [@env0 ])) [3; 2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n((fun xs ->\n    fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))[@env0 ]))\n   [3; 2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n((fun xs ->\n    fun ys -> match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n   [3; 2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n(match ((xs)[@env3 ]) with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[3; 2; 1]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 ::\n(match [3; 2; 1] with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((x :: (zs @ ys))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: ((x)[@env0 ]) :: ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((((@))[@env1 ]) [2; 1] ((ys)[@env0 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((((@))[@env0 ]) [2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n(((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n   [@env0 ]) [2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n    [@env0 ])) [2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n((fun xs ->\n    fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))[@env0 ]))\n   [2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n((fun xs ->\n    fun ys -> match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n   [2; 1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: ((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n[@env1 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n(match ((xs)[@env3 ]) with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[2; 1]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 ::\n(match [2; 1] with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((x :: (zs @ ys))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: ((x)[@env0 ]) :: ((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((((@))[@env1 ]) [1] ((ys)[@env0 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((((@))[@env0 ]) [1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n(((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n   [@env0 ]) [1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n    [@env0 ])) [1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n((fun xs ->\n    fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))[@env0 ]))\n   [1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n((fun xs ->\n    fun ys -> match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n   [1] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n(match ((xs)[@env3 ]) with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[1]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 ::\n(match [1] with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((x :: (zs @ ys))[@env2 ][@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((x :: (zs @ ys))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((x :: (zs @ ys))[@env0 ])",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: ((x)[@env0 ]) :: ((zs @ ys)[@env1 ])",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: ((x)[@env0 ]) ::\n((((@))[@env3 ]) ((zs)[@env1 ]) ((ys)[@env2 ]))",
      "envs": {
        "env0": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 :: ((((@))[@env2 ]) ((zs)[@env0 ]) ((ys)[@env1 ]))",
      "envs": {
        "env0": {
          "zs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env2": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: 1 :: ((((@))[@env1 ]) [] ((ys)[@env0 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: 1 :: ((((@))[@env0 ]) [] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n(((fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n   [@env0 ]) [] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n((fun xs -> ((fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys))\n    [@env0 ])) [] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n((fun xs ->\n    fun ys -> ((match xs with | [] -> ys | x::zs -> x :: (zs @ ys))[@env0 ]))\n   [] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n((fun xs ->\n    fun ys -> match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))\n   [] [0])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n((match xs with | [] -> ys | x::zs -> ((x :: (zs @ ys))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env1": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n(match ((xs)[@env3 ]) with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env3": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "4 :: 3 :: 2 :: 1 ::\n(match [] with\n | [] -> ((ys)[@env0 ])\n | x::zs -> ((x :: (zs @ ys))[@env2 ][@env1 ]))",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        },
        "env1": {
          "@": {
            "corec": [ "@" ],
            "expr": {
              "expr":
                "fun xs -> fun ys -> match xs with | [] -> ys | x::zs -> x :: (zs @ ys)",
              "envs": {}
            }
          }
        },
        "env2": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "4 :: 3 :: 2 :: 1 :: ((ys)[@env0 ])",
      "envs": {
        "env0": {
          "ys": { "corec": [], "expr": { "expr": "[0]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": { "expr": "[4; 3; 2; 1; 0]", "envs": {} },
    "step": []
  }
]