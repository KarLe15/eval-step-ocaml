[
  {
    "current_expression": {
      "expr": "((length [0; 1; 2; 3; 4; 5])[@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((length)[@env0 ]) [0; 1; 2; 3; 4; 5]",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))[@env0 ])\n  [0; 1; 2; 3; 4; 5]",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))[@env0 ]))\n  [0; 1; 2; 3; 4; 5]",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun xs -> match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n  [0; 1; 2; 3; 4; 5]",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "match ((xs)[@env1 ]) with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "match [0; 1; 2; 3; 4; 5] with\n| [] -> 0\n| _::xs -> ((1 + (length xs))[@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "((1 + (length xs))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((1 + (length xs))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + ((length xs)[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (((length)[@env1 ]) ((xs)[@env0 ]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (((length)[@env0 ]) [1; 2; 3; 4; 5])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))[@env0 ])\n     [1; 2; 3; 4; 5])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  ((fun xs -> ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))[@env0 ]))\n     [1; 2; 3; 4; 5])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  ((fun xs -> match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n     [1; 2; 3; 4; 5])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 + ((match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n  [@env1 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (match ((xs)[@env1 ]) with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (match [1; 2; 3; 4; 5] with\n   | [] -> 0\n   | _::xs -> ((1 + (length xs))[@env0 ]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "1 + ((1 + (length xs))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "1 + ((1 + (length xs))[@env0 ])",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + ((length xs)[@env0 ]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (((length)[@env1 ]) ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (((length)[@env0 ]) [2; 3; 4; 5]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n        [@env0 ]) [2; 3; 4; 5]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     ((fun xs -> ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n         [@env0 ])) [2; 3; 4; 5]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     ((fun xs ->\n         match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n        [2; 3; 4; 5]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 + ((match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n     [@env1 ]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (match ((xs)[@env1 ]) with\n      | [] -> 0\n      | _::xs -> ((1 + (length xs))[@env0 ])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (match [2; 3; 4; 5] with\n      | [] -> 0\n      | _::xs -> ((1 + (length xs))[@env0 ])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + ((1 + (length xs))[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + ((1 + (length xs))[@env0 ]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + ((length xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (((length)[@env1 ]) ((xs)[@env0 ]))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (((length)[@env0 ]) [3; 4; 5])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n           [@env0 ]) [3; 4; 5])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        ((fun xs -> ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n            [@env0 ])) [3; 4; 5])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        ((fun xs ->\n            match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n           [3; 4; 5])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 + ((match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n        [@env1 ])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (match ((xs)[@env1 ]) with\n         | [] -> 0\n         | _::xs -> ((1 + (length xs))[@env0 ]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[3; 4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (match [3; 4; 5] with\n         | [] -> 0\n         | _::xs -> ((1 + (length xs))[@env0 ]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + ((1 + (length xs))[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + ((1 + (length xs))[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + ((length xs)[@env0 ]))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (((length)[@env1 ]) ((xs)[@env0 ])))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (((length)[@env0 ]) [4; 5]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n              [@env0 ]) [4; 5]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           ((fun xs -> ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n               [@env0 ])) [4; 5]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           ((fun xs ->\n               match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n              [4; 5]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           ((match xs with | [] -> 0 | _::xs -> ((1 + (length xs))[@env0 ]))\n           [@env1 ]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (match ((xs)[@env1 ]) with\n            | [] -> 0\n            | _::xs -> ((1 + (length xs))[@env0 ])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (match [4; 5] with\n            | [] -> 0\n            | _::xs -> ((1 + (length xs))[@env0 ])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + ((1 + (length xs))[@env1 ][@env0 ]))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + ((1 + (length xs))[@env0 ]))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + ((length xs)[@env0 ])))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 + (1 + (1 + (1 + (1 + (((length)[@env1 ]) ((xs)[@env0 ]))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + (((length)[@env0 ]) [5])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (((fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n                 [@env0 ]) [5])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              ((fun xs ->\n                  ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n                  [@env0 ])) [5])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              ((fun xs ->\n                  match xs with\n                  | [] -> 0\n                  | _::xs -> ((1 + (length xs))[@env0 ])) [5])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              ((match xs with\n                | [] -> 0\n                | _::xs -> ((1 + (length xs))[@env0 ]))\n              [@env1 ])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (match ((xs)[@env1 ]) with\n               | [] -> 0\n               | _::xs -> ((1 + (length xs))[@env0 ]))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (match [5] with\n               | [] -> 0\n               | _::xs -> ((1 + (length xs))[@env0 ]))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "1 + (1 + (1 + (1 + (1 + ((1 + (length xs))[@env1 ][@env0 ])))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + ((1 + (length xs))[@env0 ])))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + (1 + ((length xs)[@env0 ]))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 + (1 + (1 + (1 + (1 + (1 + (((length)[@env1 ]) ((xs)[@env0 ])))))))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + (1 + (((length)[@env0 ]) []))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 (((fun xs ->\n                      match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n                    [@env0 ]) []))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 ((fun xs ->\n                     ((match xs with | [] -> 0 | _::xs -> 1 + (length xs))\n                     [@env0 ])) []))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 ((fun xs ->\n                     match xs with\n                     | [] -> 0\n                     | _::xs -> ((1 + (length xs))[@env0 ])) []))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 ((match xs with\n                   | [] -> 0\n                   | _::xs -> ((1 + (length xs))[@env0 ]))\n                 [@env1 ]))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 (match ((xs)[@env1 ]) with\n                  | [] -> 0\n                  | _::xs -> ((1 + (length xs))[@env0 ])))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "1 +\n  (1 +\n     (1 +\n        (1 +\n           (1 +\n              (1 +\n                 (match [] with\n                  | [] -> 0\n                  | _::xs -> ((1 + (length xs))[@env0 ])))))))",
      "envs": {
        "env0": {
          "length": {
            "corec": [ "length" ],
            "expr": {
              "expr":
                "fun xs -> match xs with | [] -> 0 | _::xs -> 1 + (length xs)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + (1 + 0)))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "1 + (1 + (1 + (1 + (1 + 1))))",
      "envs": {}
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "1 + (1 + (1 + (1 + 2)))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "1 + (1 + (1 + 3))", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "1 + (1 + 4)", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": { "expr": "1 + 5", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "6", "envs": {} }, "step": [] }
]