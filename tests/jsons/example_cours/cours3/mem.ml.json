[
  {
    "current_expression": {
      "expr":
        "(((mem 4 [0; 1; 2; 3; 4; 5; 6]) && (not (mem 8 [0; 1; 2; 3; 4; 5; 6])))\n[@env0 ])",
      "envs": {
        "env0": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem 4 [0; 1; 2; 3; 4; 5; 6])[@env0 ]) &&\n  ((not (mem 8 [0; 1; 2; 3; 4; 5; 6]))[@env1 ])",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  ((not (mem 8 [0; 1; 2; 3; 4; 5; 6]))[@env1 ])",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  (((not)[@env2 ]) ((mem 8 [0; 1; 2; 3; 4; 5; 6])[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  (((not)[@env2 ]) (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "not": {
            "corec": [],
            "expr": {
              "expr": "fun b -> match b with | true -> false | false -> true",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [0; 1; 2; 3; 4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs ->\n       match xs with\n       | [] -> false\n       | x::xs -> if x = z then true else mem z xs)[@env0 ]) 4\n   [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs ->\n        match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n    [@env0 ])) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      ((match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n      [@env0 ])) 4 [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 4\n   [0; 1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> false\n  | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [0; 1; 2; 3; 4; 5; 6] with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 0 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 0 = 4 then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(if false then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env1 ]) 4 ((xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [1; 2; 3; 4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs ->\n       match xs with\n       | [] -> false\n       | x::xs -> if x = z then true else mem z xs)[@env0 ]) 4\n   [1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs ->\n        match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n    [@env0 ])) 4 [1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      ((match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n      [@env0 ])) 4 [1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 4\n   [1; 2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> false\n  | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [1; 2; 3; 4; 5; 6] with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 1 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 1 = 4 then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(if false then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env1 ]) 4 ((xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [2; 3; 4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs ->\n       match xs with\n       | [] -> false\n       | x::xs -> if x = z then true else mem z xs)[@env0 ]) 4\n   [2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs ->\n        match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n    [@env0 ])) 4 [2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      ((match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n      [@env0 ])) 4 [2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 4\n   [2; 3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> false\n  | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [2; 3; 4; 5; 6] with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 2 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 2 = 4 then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(if false then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env1 ]) 4 ((xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [3; 4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs ->\n       match xs with\n       | [] -> false\n       | x::xs -> if x = z then true else mem z xs)[@env0 ]) 4 [3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs ->\n        match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n    [@env0 ])) 4 [3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      ((match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n      [@env0 ])) 4 [3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 4 [3; 4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> false\n  | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [3; 4; 5; 6] with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 3 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 3 = 4 then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(if false then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "((mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env1 ]) 4 ((xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(((mem)[@env0 ]) 4 [4; 5; 6]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "(((fun z ->\n     fun xs ->\n       match xs with\n       | [] -> false\n       | x::xs -> if x = z then true else mem z xs)[@env0 ]) 4 [4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    ((fun xs ->\n        match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n    [@env0 ])) 4 [4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      ((match xs with\n        | [] -> false\n        | x::xs -> if x = z then true else mem z xs)\n      [@env0 ])) 4 [4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "((fun z ->\n    fun xs ->\n      match xs with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 4 [4; 5; 6])\n  &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((match xs with\n  | [] -> false\n  | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(match ((xs)[@env2 ]) with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(match [4; 5; 6] with\n | [] -> false\n | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env1 ][@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "((if x = z then true else mem z xs)[@env0 ]) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env3 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env3": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 4 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "(if 4 = 4 then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "(if true then true else ((mem z xs)[@env0 ])) &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8\n        [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8\n        [0; 1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[0; 1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [0; 1; 2; 3; 4; 5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "0", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 0 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 0 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8\n        [1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8\n        [1; 2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[1; 2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [1; 2; 3; 4; 5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "1", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 1 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 1 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8\n        [2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8\n        [2; 3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[2; 3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [2; 3; 4; 5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "2", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 2 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 2 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8\n        [3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8\n        [3; 4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": {
            "corec": [],
            "expr": { "expr": "[3; 4; 5; 6]", "envs": {} }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [3; 4; 5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 3 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 3 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8 [4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8\n        [4; 5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[4; 5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [4; 5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "4", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "4", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 4 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 4 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8 [5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8 \n        [5; 6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[5; 6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [5; 6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "5", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "5", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 5 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 5 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 [6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8 [6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 [6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 [6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8 \n        [6]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[6]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [6] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env2 ][@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env1 ][@env0 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((if x = z then true else mem z xs)[@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x = z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "x": { "corec": [], "expr": { "expr": "6", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if ((x)[@env1 ]) = ((z)[@env2 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "x": { "corec": [], "expr": { "expr": "6", "envs": {} } } },
        "env2": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 6 = ((z)[@env1 ]) then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if 6 = 8 then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (if false then true else ((mem z xs)[@env0 ])))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true) ((mem z xs)\n     [@env0 ]))",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } },
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env2 ]) ((z)[@env0 ]) ((xs)[@env1 ])))",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env1": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env2": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env1 ]) 8 ((xs)[@env0 ])))",
      "envs": {
        "env0": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        },
        "env1": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((mem)[@env0 ]) 8 []))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (((fun z ->\n          fun xs ->\n            match xs with\n            | [] -> false\n            | x::xs -> if x = z then true else mem z xs)[@env0 ]) 8 []))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         ((fun xs ->\n             match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n         [@env0 ])) 8 []))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           ((match xs with\n             | [] -> false\n             | x::xs -> if x = z then true else mem z xs)\n           [@env0 ])) 8 []))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((fun z ->\n         fun xs ->\n           match xs with\n           | [] -> false\n           | x::xs -> ((if x = z then true else mem z xs)[@env0 ])) 8 []))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     ((match xs with\n       | [] -> false\n       | x::xs -> ((if x = z then true else mem z xs)[@env0 ]))[@env1 ]))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": {
          "z": { "corec": [], "expr": { "expr": "8", "envs": {} } },
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match ((xs)[@env2 ]) with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } },
        "env2": {
          "xs": { "corec": [], "expr": { "expr": "[]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "true &&\n  ((fun b -> match b with | true -> false | false -> true)\n     (match [] with\n      | [] -> false\n      | x::xs -> ((if x = z then true else mem z xs)[@env1 ][@env0 ])))",
      "envs": {
        "env0": {
          "mem": {
            "corec": [ "mem" ],
            "expr": {
              "expr":
                "fun z ->\n  fun xs ->\n    match xs with | [] -> false | x::xs -> if x = z then true else mem z xs",
              "envs": {}
            }
          }
        },
        "env1": { "z": { "corec": [], "expr": { "expr": "8", "envs": {} } } }
      }
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr":
        "true && ((fun b -> match b with | true -> false | false -> true) false)",
      "envs": {}
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "true && ((match b with | true -> false | false -> true)[@env0 ])",
      "envs": {
        "env0": {
          "b": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "true && (match ((b)[@env0 ]) with | true -> false | false -> true)",
      "envs": {
        "env0": {
          "b": { "corec": [], "expr": { "expr": "false", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "true && (match false with | true -> false | false -> true)",
      "envs": {}
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": { "expr": "true && true", "envs": {} },
    "step": [ "ApplyFunRuntime" ]
  },
  { "current_expression": { "expr": "true", "envs": {} }, "step": [] }
]