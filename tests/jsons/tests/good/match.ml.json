[
  {
    "current_expression": {
      "expr":
        "let x = [1; 2; 3] in\nlet (a, b, c) = match x with | y::z::t::[] -> (y, z, t) | _ -> (0, 0, 0) in\n()",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr":
        "((let (a, b, c) = match x with | y::z::t::[] -> (y, z, t) | _ -> (0, 0, 0) in\n  ())\n[@env0 ])",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "[1; 2; 3]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a, b, c) = ((match x with | y::z::t::[] -> (y, z, t) | _ -> (0, 0, 0))\n  [@env0 ]) in\n()",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "[1; 2; 3]", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a, b, c) =\n  match ((x)[@env0 ]) with | y::z::t::[] -> (y, z, t) | _ -> (0, 0, 0) in\n()",
      "envs": {
        "env0": {
          "x": { "corec": [], "expr": { "expr": "[1; 2; 3]", "envs": {} } }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a, b, c) =\n  match [1; 2; 3] with | y::z::t::[] -> (y, z, t) | _ -> (0, 0, 0) in\n()",
      "envs": {}
    },
    "step": [ "Match" ]
  },
  {
    "current_expression": {
      "expr": "let (a, b, c) = (((y, z, t))[@env0 ]) in ()",
      "envs": {
        "env0": {
          "z": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "y": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "t": { "corec": [], "expr": { "expr": "3", "envs": {} } }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "let (a, b, c) = (((y)[@env0 ]), ((z)[@env1 ]), ((t)[@env2 ])) in ()",
      "envs": {
        "env0": { "y": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": { "z": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "t": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "let (a, b, c) = (1, ((z)[@env0 ]), ((t)[@env1 ])) in ()",
      "envs": {
        "env0": { "z": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": { "t": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "let (a, b, c) = (1, 2, ((t)[@env0 ])) in ()",
      "envs": {
        "env0": { "t": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "let (a, b, c) = (1, 2, 3) in ()",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  { "current_expression": { "expr": "()", "envs": {} }, "step": [] }
]