[
  {
    "current_expression": {
      "expr":
        "let rec pair n = if n = 0 then true else impair (n - 1)\nand impair n = if n = 0 then false else pair (n - 1) in pair 3",
      "envs": {}
    },
    "step": [ "Let" ]
  },
  {
    "current_expression": {
      "expr": "((pair 3)[@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((pair)[@env0 ]) 3",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr": "((fun n -> if n = 0 then true else impair (n - 1))[@env0 ]) 3",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> ((if n = 0 then true else impair (n - 1))[@env0 ])) 3",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> if n = 0 then true else ((impair (n - 1))[@env0 ])) 3",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((if n = 0 then true else ((impair (n - 1))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env2 ]) then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env2 ]) = 0 then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 3 = 0 then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((impair (n - 1))[@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "3", "envs": {} } },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env1 ]) ((n - 1)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env1 ]) (((n)[@env0 ]) - 1)",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "3", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env0 ]) (3 - 1)",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env0 ]) 2",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr": "((fun n -> if n = 0 then false else pair (n - 1))[@env0 ]) 2",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> ((if n = 0 then false else pair (n - 1))[@env0 ])) 2",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> if n = 0 then false else ((pair (n - 1))[@env0 ])) 2",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr": "((if n = 0 then false else ((pair (n - 1))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env2 ]) then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env2 ]) = 0 then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 2 = 0 then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((pair (n - 1))[@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "2", "envs": {} } },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((pair)[@env1 ]) ((n - 1)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((pair)[@env1 ]) (((n)[@env0 ]) - 1)",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "2", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((pair)[@env0 ]) (2 - 1)",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((pair)[@env0 ]) 1",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr": "((fun n -> if n = 0 then true else impair (n - 1))[@env0 ]) 1",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> ((if n = 0 then true else impair (n - 1))[@env0 ])) 1",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> if n = 0 then true else ((impair (n - 1))[@env0 ])) 1",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr":
        "((if n = 0 then true else ((impair (n - 1))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env2 ]) then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env2 ]) = 0 then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 1 = 0 then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if false then true else ((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  {
    "current_expression": {
      "expr": "((impair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } }
      }
    },
    "step": [ "SubstCombine" ]
  },
  {
    "current_expression": {
      "expr": "((impair (n - 1))[@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "n": { "corec": [], "expr": { "expr": "1", "envs": {} } },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env1 ]) ((n - 1)[@env0 ])",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env1 ]) (((n)[@env0 ]) - 1)",
      "envs": {
        "env0": { "n": { "corec": [], "expr": { "expr": "1", "envs": {} } } },
        "env1": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env0 ]) (1 - 1)",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "((impair)[@env0 ]) 0",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "SubstFun" ]
  },
  {
    "current_expression": {
      "expr": "((fun n -> if n = 0 then false else pair (n - 1))[@env0 ]) 0",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> ((if n = 0 then false else pair (n - 1))[@env0 ])) 0",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "(fun n -> if n = 0 then false else ((pair (n - 1))[@env0 ])) 0",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        }
      }
    },
    "step": [ "ApplyFunComplete" ]
  },
  {
    "current_expression": {
      "expr": "((if n = 0 then false else ((pair (n - 1))[@env0 ]))[@env1 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n = 0)[@env2 ]) then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "MoveDownSubst" ]
  },
  {
    "current_expression": {
      "expr":
        "if ((n)[@env2 ]) = 0 then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } },
        "env2": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "SubstVar" ]
  },
  {
    "current_expression": {
      "expr": "if 0 = 0 then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "ApplyFunRuntime" ]
  },
  {
    "current_expression": {
      "expr": "if true then false else ((pair (n - 1))[@env1 ][@env0 ])",
      "envs": {
        "env0": {
          "pair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then true else impair (n - 1)",
              "envs": {}
            }
          },
          "impair": {
            "corec": [ "impair", "pair" ],
            "expr": {
              "expr": "fun n -> if n = 0 then false else pair (n - 1)",
              "envs": {}
            }
          }
        },
        "env1": { "n": { "corec": [], "expr": { "expr": "0", "envs": {} } } }
      }
    },
    "step": [ "If" ]
  },
  { "current_expression": { "expr": "false", "envs": {} }, "step": [] }
]